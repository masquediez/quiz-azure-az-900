{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\github\\\\quiz-azure-react\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\n// Archivos JSON con textos estáticos en diferentes idiomas\nimport textosES from \"./textos-es.json\";\nimport textosEN from \"./textos-en.json\";\nimport textosDE from \"./textos-de.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [language, setLanguage] = useState(\"es\"); // Estado para el idioma seleccionado\n  const [selectedLanguage, setSelectedLanguage] = useState(\"es\"); // Estado para el botón de idioma seleccionado\n  const [quizStarted, setQuizStarted] = useState(false); // Estado para controlar si se ha iniciado el quiz\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false); // Estado para mostrar la respuesta correcta\n\n  useEffect(() => {\n    // Cargar las preguntas solo al inicio\n    const fetchQuestions = async () => {\n      const fetchedQuestions = await loadQuestionsByLanguage(language);\n      if (fetchedQuestions.length > 0) {\n        const shuffledQuestions = shuffleArray(fetchedQuestions);\n        setQuestions(shuffledQuestions);\n      }\n    };\n    fetchQuestions();\n  }, [language]); // Añadir language a la dependencia para actualizar preguntas al cambiar idioma\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const loadQuestionsByLanguage = async lang => {\n    try {\n      const response = await axios.get(`http://localhost:3001/questions-${lang}.json`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      return [];\n    }\n  };\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n    setShowCorrectAnswer(false);\n  };\n  const handleNextQuestion = () => {\n    var _selectedQuestions$cu, _selectedQuestions$cu2;\n    // Verificar si la respuesta seleccionada es correcta\n    if (selectedOption === ((_selectedQuestions$cu = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu === void 0 ? void 0 : _selectedQuestions$cu.answer)) {\n      setScore(prevScore => prevScore + 1); // Contabiliza la respuesta correcta\n    }\n\n    // Mostrar el pop-up con la respuesta correcta si es incorrecta\n    if (selectedOption !== ((_selectedQuestions$cu2 = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu2 === void 0 ? void 0 : _selectedQuestions$cu2.answer)) {\n      setShowCorrectAnswer(true);\n      return; // Detener el avance hasta que se cierre el pop-up\n    }\n\n    // Avanzar a la siguiente pregunta o mostrar los resultados si es la última pregunta\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(\"\");\n    } else {\n      setShowScore(true);\n    }\n    setTimeLeft(60);\n  };\n  const handleResetQuiz = () => {\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setQuizStarted(false); // Reiniciar el estado de quizStarted\n    setSelectedQuestions([]);\n    setTimeLeft(60);\n  };\n  const handleNumQuestionsChange = e => {\n    setNumQuestions(Number(e.target.value));\n  };\n  const startQuiz = () => {\n    setSelectedQuestions(shuffleArray(questions).slice(0, numQuestions));\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n    setQuizStarted(true); // Marcar que el quiz ha comenzado\n  };\n  const changeLanguage = lang => {\n    setLanguage(lang);\n    setSelectedLanguage(lang); // Marca el botón de idioma seleccionado\n  };\n\n  // Definición de textos estáticos según el idioma seleccionado\n  const textos = {\n    es: textosES,\n    en: textosEN,\n    de: textosDE\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedLanguage === \"es\" ? \"selected\" : \"\",\n        onClick: () => changeLanguage(\"es\"),\n        children: \"ES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedLanguage === \"en\" ? \"selected\" : \"\",\n        onClick: () => changeLanguage(\"en\"),\n        children: \"EN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedLanguage === \"de\" ? \"selected\" : \"\",\n        onClick: () => changeLanguage(\"de\"),\n        children: \"DE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [!quizStarted && !showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [textos[language].elegirCantidadPreguntas, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            max: questions.length,\n            value: numQuestions,\n            onChange: handleNumQuestionsChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startQuiz,\n          children: textos[language].iniciarQuiz\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), quizStarted && !showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [textos[language].tiempoRestante, \": \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedQuestions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: selectedQuestions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `option ${showCorrectAnswer && option === selectedQuestions[currentQuestionIndex].answer ? \"correct\" : showCorrectAnswer && option === selectedOption ? \"incorrect\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"option\",\n              value: option,\n              checked: selectedOption === option,\n              onChange: handleOptionChange,\n              disabled: showCorrectAnswer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 21\n            }, this), option]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), showCorrectAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [textos[language].respuestaCorrecta, \":\", \" \", selectedQuestions[currentQuestionIndex].answer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextQuestion,\n            children: currentQuestionIndex < selectedQuestions.length - 1 ? textos[language].siguientePregunta : textos[language].verResultado\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [textos[language].puntuacion, \": \", score, \" / \", numQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [textos[language].porcentajeAciertos, \":\", \" \", (score / numQuestions * 100).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetQuiz,\n            children: textos[language].reiniciarQuiz\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"f3hCR6KqmQf9h/FGntAdhrSxs/o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","textosES","textosEN","textosDE","jsxDEV","_jsxDEV","shuffleArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","App","_s","questions","setQuestions","selectedQuestions","setSelectedQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","numQuestions","setNumQuestions","language","setLanguage","selectedLanguage","setSelectedLanguage","quizStarted","setQuizStarted","showCorrectAnswer","setShowCorrectAnswer","fetchQuestions","fetchedQuestions","loadQuestionsByLanguage","shuffledQuestions","handleNextQuestion","timer","setInterval","prevTime","clearInterval","lang","response","get","data","error","console","handleOptionChange","e","target","value","_selectedQuestions$cu","_selectedQuestions$cu2","answer","prevScore","handleResetQuiz","handleNumQuestionsChange","Number","startQuiz","slice","changeLanguage","textos","es","en","de","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","elegirCantidadPreguntas","type","min","max","onChange","iniciarQuiz","tiempoRestante","question","options","map","option","index","name","checked","disabled","respuestaCorrecta","siguientePregunta","verResultado","puntuacion","porcentajeAciertos","toFixed","reiniciarQuiz","_c","$RefreshReg$"],"sources":["C:/Users/gabri/github/quiz-azure-react/quiz-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\n// Archivos JSON con textos estáticos en diferentes idiomas\nimport textosES from \"./textos-es.json\";\nimport textosEN from \"./textos-en.json\";\nimport textosDE from \"./textos-de.json\";\n\nconst shuffleArray = (array) => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [language, setLanguage] = useState(\"es\"); // Estado para el idioma seleccionado\n  const [selectedLanguage, setSelectedLanguage] = useState(\"es\"); // Estado para el botón de idioma seleccionado\n  const [quizStarted, setQuizStarted] = useState(false); // Estado para controlar si se ha iniciado el quiz\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false); // Estado para mostrar la respuesta correcta\n\n  useEffect(() => {\n    // Cargar las preguntas solo al inicio\n    const fetchQuestions = async () => {\n      const fetchedQuestions = await loadQuestionsByLanguage(language);\n      if (fetchedQuestions.length > 0) {\n        const shuffledQuestions = shuffleArray(fetchedQuestions);\n        setQuestions(shuffledQuestions);\n      }\n    };\n    fetchQuestions();\n  }, [language]); // Añadir language a la dependencia para actualizar preguntas al cambiar idioma\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft((prevTime) => prevTime - 1);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  const loadQuestionsByLanguage = async (lang) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:3001/questions-${lang}.json`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      return [];\n    }\n  };\n\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n    setShowCorrectAnswer(false);\n  };\n\n  const handleNextQuestion = () => {\n    // Verificar si la respuesta seleccionada es correcta\n    if (selectedOption === selectedQuestions[currentQuestionIndex]?.answer) {\n      setScore((prevScore) => prevScore + 1); // Contabiliza la respuesta correcta\n    }\n\n    // Mostrar el pop-up con la respuesta correcta si es incorrecta\n    if (selectedOption !== selectedQuestions[currentQuestionIndex]?.answer) {\n      setShowCorrectAnswer(true);\n      return; // Detener el avance hasta que se cierre el pop-up\n    }\n\n    // Avanzar a la siguiente pregunta o mostrar los resultados si es la última pregunta\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(\"\");\n    } else {\n      setShowScore(true);\n    }\n\n    setTimeLeft(60);\n  };\n\n  const handleResetQuiz = () => {\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setQuizStarted(false); // Reiniciar el estado de quizStarted\n    setSelectedQuestions([]);\n    setTimeLeft(60);\n  };\n\n  const handleNumQuestionsChange = (e) => {\n    setNumQuestions(Number(e.target.value));\n  };\n\n  const startQuiz = () => {\n    setSelectedQuestions(shuffleArray(questions).slice(0, numQuestions));\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n    setQuizStarted(true); // Marcar que el quiz ha comenzado\n  };\n\n  const changeLanguage = (lang) => {\n    setLanguage(lang);\n    setSelectedLanguage(lang); // Marca el botón de idioma seleccionado\n  };\n\n  // Definición de textos estáticos según el idioma seleccionado\n  const textos = {\n    es: textosES,\n    en: textosEN,\n    de: textosDE,\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"language-buttons\">\n        <button\n          className={selectedLanguage === \"es\" ? \"selected\" : \"\"}\n          onClick={() => changeLanguage(\"es\")}\n        >\n          ES\n        </button>\n        <button\n          className={selectedLanguage === \"en\" ? \"selected\" : \"\"}\n          onClick={() => changeLanguage(\"en\")}\n        >\n          EN\n        </button>\n        <button\n          className={selectedLanguage === \"de\" ? \"selected\" : \"\"}\n          onClick={() => changeLanguage(\"de\")}\n        >\n          DE\n        </button>\n      </div>\n      <div className=\"container\">\n        {!quizStarted && !showScore && (\n          <div>\n            <label>\n              {textos[language].elegirCantidadPreguntas}\n              <input\n                type=\"number\"\n                min=\"1\"\n                max={questions.length}\n                value={numQuestions}\n                onChange={handleNumQuestionsChange}\n              />\n            </label>\n            <button onClick={startQuiz}>{textos[language].iniciarQuiz}</button>\n          </div>\n        )}\n        {quizStarted && !showScore && (\n          <div>\n            <div className=\"timer\">\n              {textos[language].tiempoRestante}: {timeLeft}s\n            </div>\n            <h2>{selectedQuestions[currentQuestionIndex].question}</h2>\n            <div>\n              {selectedQuestions[currentQuestionIndex].options.map(\n                (option, index) => (\n                  <div\n                    key={index}\n                    className={`option ${\n                      showCorrectAnswer &&\n                      option === selectedQuestions[currentQuestionIndex].answer\n                        ? \"correct\"\n                        : showCorrectAnswer && option === selectedOption\n                        ? \"incorrect\"\n                        : \"\"\n                    }`}\n                  >\n                    <input\n                      type=\"radio\"\n                      name=\"option\"\n                      value={option}\n                      checked={selectedOption === option}\n                      onChange={handleOptionChange}\n                      disabled={showCorrectAnswer}\n                    />\n                    {option}\n                  </div>\n                )\n              )}\n            </div>\n            {showCorrectAnswer && (\n              <div className=\"popup\">\n                <p>\n                  {textos[language].respuestaCorrecta}:{\" \"}\n                  {selectedQuestions[currentQuestionIndex].answer}\n                </p>\n                <button onClick={handleNextQuestion}>\n                  {currentQuestionIndex < selectedQuestions.length - 1\n                    ? textos[language].siguientePregunta\n                    : textos[language].verResultado}\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n        {showScore && (\n          <div>\n            <p>\n              {textos[language].puntuacion}: {score} / {numQuestions}\n            </p>\n            <p>\n              {textos[language].porcentajeAciertos}:{\" \"}\n              {((score / numQuestions) * 100).toFixed(2)}%\n            </p>\n            <div className=\"button-container\">\n              <button onClick={handleResetQuiz}>\n                {textos[language].reiniciarQuiz}\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}