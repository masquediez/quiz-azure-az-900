{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\github\\\\azure-quiz-2\\\\quiz-azure-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport textosES from \"./textos-es.json\";\nimport textosEN from \"./textos-en.json\";\nimport textosDE from \"./textos-de.json\";\nimport LanguageButtons from \"./LanguageButtons\";\nimport StartQuiz from \"./StartQuiz\";\nimport Quiz from \"./Quiz\";\nimport Score from \"./Score\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [language, setLanguage] = useState(\"es\");\n  const [selectedLanguage, setSelectedLanguage] = useState(\"es\");\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const fetchQuestions = async () => {\n    const fetchedQuestions = await loadQuestionsByLanguage(language);\n    if (fetchedQuestions.length > 0) {\n      const shuffledQuestions = shuffleArray(fetchedQuestions);\n      setQuestions(shuffledQuestions);\n    }\n  };\n  useEffect(() => {\n    fetchQuestions();\n  }, [language]);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const loadQuestionsByLanguage = async lang => {\n    try {\n      const response = await axios.get(`http://localhost:3001/questions-${lang}.json`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      return [];\n    }\n  };\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n    setShowCorrectAnswer(false);\n  };\n  const checkAnswer = () => {\n    var _selectedQuestions$cu;\n    if (selectedOption === ((_selectedQuestions$cu = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu === void 0 ? void 0 : _selectedQuestions$cu.answer)) {\n      setScore(prevScore => prevScore + 1);\n      setAnswerMessage(textos[language].respuestaCorrecta);\n    } else {\n      setAnswerMessage(textos[language].respuestaIncorrecta);\n    }\n    setShowCorrectAnswer(true);\n  };\n  const handleNextQuestion = () => {\n    if (!showCorrectAnswer && selectedOption) {\n      checkAnswer();\n    }\n    setShowCorrectAnswer(false);\n    setAnswerMessage(\"\");\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(\"\");\n      setTimeLeft(60);\n    } else {\n      setShowScore(true);\n    }\n  };\n  const handleResetQuiz = () => {\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setQuizStarted(false);\n    setSelectedQuestions([]);\n    setTimeLeft(60);\n  };\n  const handleNumQuestionsChange = e => {\n    setNumQuestions(Number(e.target.value));\n  };\n  const startQuiz = () => {\n    if (questions.length === 0) {\n      console.error(\"No questions loaded\");\n      return;\n    }\n    setSelectedQuestions(shuffleArray(questions).slice(0, numQuestions));\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n    setQuizStarted(true);\n  };\n  const changeLanguage = lang => {\n    setLanguage(lang);\n    setSelectedLanguage(lang);\n  };\n  const handleRegister = () => {\n    setLoggedIn(true);\n  };\n  const handleLogin = () => {\n    setLoggedIn(true);\n  };\n  const textos = {\n    es: textosES,\n    en: textosEN,\n    de: textosDE\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(LanguageButtons, {\n      selectedLanguage: selectedLanguage,\n      changeLanguage: changeLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [!loggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Register, {\n          onRegister: handleRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), loggedIn && !quizStarted && !showScore && /*#__PURE__*/_jsxDEV(StartQuiz, {\n        textos: textos[language],\n        numQuestions: numQuestions,\n        handleNumQuestionsChange: handleNumQuestionsChange,\n        startQuiz: startQuiz,\n        questionsLength: questions.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), quizStarted && !showScore && selectedQuestions.length > 0 && /*#__PURE__*/_jsxDEV(Quiz, {\n        textos: textos[language],\n        selectedQuestions: selectedQuestions,\n        currentQuestionIndex: currentQuestionIndex,\n        timeLeft: timeLeft,\n        selectedOption: selectedOption,\n        showCorrectAnswer: showCorrectAnswer,\n        answerMessage: answerMessage,\n        handleOptionChange: handleOptionChange,\n        checkAnswer: checkAnswer,\n        handleNextQuestion: handleNextQuestion,\n        score: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), showScore && /*#__PURE__*/_jsxDEV(Score, {\n        textos: textos[language],\n        score: score,\n        numQuestions: numQuestions,\n        handleResetQuiz: handleResetQuiz,\n        selectedQuestionsLength: selectedQuestions.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eusoYt2pmAQqNZv0cVbNK9bcA2s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","textosES","textosEN","textosDE","LanguageButtons","StartQuiz","Quiz","Score","Register","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","shuffleArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","App","_s","questions","setQuestions","selectedQuestions","setSelectedQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","answerMessage","setAnswerMessage","numQuestions","setNumQuestions","showCorrectAnswer","setShowCorrectAnswer","language","setLanguage","selectedLanguage","setSelectedLanguage","quizStarted","setQuizStarted","loggedIn","setLoggedIn","fetchQuestions","fetchedQuestions","loadQuestionsByLanguage","shuffledQuestions","handleNextQuestion","timer","setInterval","prevTime","clearInterval","lang","response","get","data","error","console","handleOptionChange","option","checkAnswer","_selectedQuestions$cu","answer","prevScore","textos","respuestaCorrecta","respuestaIncorrecta","handleResetQuiz","handleNumQuestionsChange","e","Number","target","value","startQuiz","slice","changeLanguage","handleRegister","handleLogin","es","en","de","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onRegister","onLogin","questionsLength","selectedQuestionsLength","_c","$RefreshReg$"],"sources":["C:/Users/gabri/github/azure-quiz-2/quiz-azure-react/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\nimport textosES from \"./textos-es.json\";\nimport textosEN from \"./textos-en.json\";\nimport textosDE from \"./textos-de.json\";\n\nimport LanguageButtons from \"./LanguageButtons\";\nimport StartQuiz from \"./StartQuiz\";\nimport Quiz from \"./Quiz\";\nimport Score from \"./Score\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\n\nconst shuffleArray = (array) => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [language, setLanguage] = useState(\"es\");\n  const [selectedLanguage, setSelectedLanguage] = useState(\"es\");\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const fetchQuestions = async () => {\n    const fetchedQuestions = await loadQuestionsByLanguage(language);\n    if (fetchedQuestions.length > 0) {\n      const shuffledQuestions = shuffleArray(fetchedQuestions);\n      setQuestions(shuffledQuestions);\n    }\n  };\n\n  useEffect(() => {\n    fetchQuestions();\n  }, [language]);\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft((prevTime) => prevTime - 1);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  const loadQuestionsByLanguage = async (lang) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:3001/questions-${lang}.json`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      return [];\n    }\n  };\n\n  const handleOptionChange = (option) => {\n    setSelectedOption(option);\n    setShowCorrectAnswer(false);\n  };\n\n  const checkAnswer = () => {\n    if (selectedOption === selectedQuestions[currentQuestionIndex]?.answer) {\n      setScore((prevScore) => prevScore + 1);\n      setAnswerMessage(textos[language].respuestaCorrecta);\n    } else {\n      setAnswerMessage(textos[language].respuestaIncorrecta);\n    }\n    setShowCorrectAnswer(true);\n  };\n\n  const handleNextQuestion = () => {\n    if (!showCorrectAnswer && selectedOption) {\n      checkAnswer();\n    }\n\n    setShowCorrectAnswer(false);\n    setAnswerMessage(\"\");\n\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(\"\");\n      setTimeLeft(60);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleResetQuiz = () => {\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setQuizStarted(false);\n    setSelectedQuestions([]);\n    setTimeLeft(60);\n  };\n\n  const handleNumQuestionsChange = (e) => {\n    setNumQuestions(Number(e.target.value));\n  };\n\n  const startQuiz = () => {\n    if (questions.length === 0) {\n      console.error(\"No questions loaded\");\n      return;\n    }\n    setSelectedQuestions(shuffleArray(questions).slice(0, numQuestions));\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n    setQuizStarted(true);\n  };\n\n  const changeLanguage = (lang) => {\n    setLanguage(lang);\n    setSelectedLanguage(lang);\n  };\n\n  const handleRegister = () => {\n    setLoggedIn(true);\n  };\n\n  const handleLogin = () => {\n    setLoggedIn(true);\n  };\n\n  const textos = {\n    es: textosES,\n    en: textosEN,\n    de: textosDE,\n  };\n\n  return (\n    <div className=\"App\">\n      <LanguageButtons\n        selectedLanguage={selectedLanguage}\n        changeLanguage={changeLanguage}\n      />\n      <div className=\"container\">\n        {!loggedIn && (\n          <>\n            <Register onRegister={handleRegister} />\n            <Login onLogin={handleLogin} />\n          </>\n        )}\n        {loggedIn && !quizStarted && !showScore && (\n          <StartQuiz\n            textos={textos[language]}\n            numQuestions={numQuestions}\n            handleNumQuestionsChange={handleNumQuestionsChange}\n            startQuiz={startQuiz}\n            questionsLength={questions.length}\n          />\n        )}\n        {quizStarted && !showScore && selectedQuestions.length > 0 && (\n          <Quiz\n            textos={textos[language]}\n            selectedQuestions={selectedQuestions}\n            currentQuestionIndex={currentQuestionIndex}\n            timeLeft={timeLeft}\n            selectedOption={selectedOption}\n            showCorrectAnswer={showCorrectAnswer}\n            answerMessage={answerMessage}\n            handleOptionChange={handleOptionChange}\n            checkAnswer={checkAnswer}\n            handleNextQuestion={handleNextQuestion}\n            score={score}\n          />\n        )}\n        {showScore && (\n          <Score\n            textos={textos[language]}\n            score={score}\n            numQuestions={numQuestions}\n            handleResetQuiz={handleResetQuiz}\n            selectedQuestionsLength={selectedQuestions.length}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}