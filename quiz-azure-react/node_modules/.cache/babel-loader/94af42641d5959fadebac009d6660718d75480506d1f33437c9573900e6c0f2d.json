{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\github\\\\quiz-azure-react\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [showResultMessage, setShowResultMessage] = useState(false);\n  const [resultMessage, setResultMessage] = useState(\"\");\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/questions\");\n        setQuestions(response.data);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  const handleVerifyAnswer = () => {\n    var _questions$currentQue;\n    if (selectedOption === \"\") {\n      alert(\"Seleccione una opción antes de verificar.\");\n      return;\n    }\n    const isCorrect = selectedOption === ((_questions$currentQue = questions[currentQuestionIndex]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.answer);\n    const message = isCorrect ? \"¡Respuesta Correcta!\" : \"Respuesta Incorrecta\";\n    setShowResultMessage(true);\n    setResultMessage(message);\n  };\n  const handleNextQuestion = () => {\n    var _questions$currentQue2;\n    // Validar si se ha seleccionado una opción antes de avanzar\n    if (selectedOption === \"\") {\n      alert(\"Seleccione una opción antes de continuar.\");\n      return;\n    }\n\n    // Verificar si la opción seleccionada es correcta y actualizar puntaje\n    if (selectedOption === ((_questions$currentQue2 = questions[currentQuestionIndex]) === null || _questions$currentQue2 === void 0 ? void 0 : _questions$currentQue2.answer)) {\n      setScore(score + 1);\n    }\n\n    // Limpiar la selección y reiniciar el temporizador\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n\n    // Avanzar a la siguiente pregunta o mostrar el puntaje final\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScore(true);\n    }\n\n    // Reiniciar el estado de mensajes de resultado\n    setShowResultMessage(false);\n    setResultMessage(\"\");\n  };\n  const handleResetQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowScore(false);\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n    setShowResultMessage(false);\n    setResultMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Tu puntaje es \", score, \" de \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetQuiz,\n            children: \"Reiniciar Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : questions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [\"Tiempo restante: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: questions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"option\",\n              value: option,\n              checked: selectedOption === option,\n              onChange: handleOptionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 23\n            }, this), option]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleVerifyAnswer,\n            children: \"Verificar Respuesta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), showResultMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: resultMessage === \"¡Respuesta Correcta!\" ? \"correct\" : \"incorrect\",\n            children: resultMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextQuestion,\n            children: \"Siguiente Pregunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetQuiz,\n            children: \"Reiniciar Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"SyLA+hEhCO/Ceu3LU8G2nMAWy6g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","showResultMessage","setShowResultMessage","resultMessage","setResultMessage","fetchQuestions","response","get","data","error","console","handleNextQuestion","timer","setInterval","prevTime","clearInterval","handleOptionChange","e","target","value","handleVerifyAnswer","_questions$currentQue","alert","isCorrect","answer","message","_questions$currentQue2","length","handleResetQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","options","map","option","index","type","name","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/gabri/github/quiz-azure-react/quiz-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [showResultMessage, setShowResultMessage] = useState(false);\n  const [resultMessage, setResultMessage] = useState(\"\");\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/questions\");\n        setQuestions(response.data);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft((prevTime) => prevTime - 1);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n  };\n\n  const handleVerifyAnswer = () => {\n    if (selectedOption === \"\") {\n      alert(\"Seleccione una opción antes de verificar.\");\n      return;\n    }\n\n    const isCorrect =\n      selectedOption === questions[currentQuestionIndex]?.answer;\n    const message = isCorrect ? \"¡Respuesta Correcta!\" : \"Respuesta Incorrecta\";\n\n    setShowResultMessage(true);\n    setResultMessage(message);\n  };\n\n  const handleNextQuestion = () => {\n    // Validar si se ha seleccionado una opción antes de avanzar\n    if (selectedOption === \"\") {\n      alert(\"Seleccione una opción antes de continuar.\");\n      return;\n    }\n\n    // Verificar si la opción seleccionada es correcta y actualizar puntaje\n    if (selectedOption === questions[currentQuestionIndex]?.answer) {\n      setScore(score + 1);\n    }\n\n    // Limpiar la selección y reiniciar el temporizador\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n\n    // Avanzar a la siguiente pregunta o mostrar el puntaje final\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScore(true);\n    }\n\n    // Reiniciar el estado de mensajes de resultado\n    setShowResultMessage(false);\n    setResultMessage(\"\");\n  };\n\n  const handleResetQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowScore(false);\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n    setShowResultMessage(false);\n    setResultMessage(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        {showScore ? (\n          <div>\n            <div>\n              Tu puntaje es {score} de {questions.length}\n            </div>\n            <div className=\"button-container\">\n              <button onClick={handleResetQuiz}>Reiniciar Quiz</button>\n            </div>\n          </div>\n        ) : (\n          questions.length > 0 && (\n            <div>\n              <div className=\"timer\">Tiempo restante: {timeLeft}s</div>\n              <h2>{questions[currentQuestionIndex].question}</h2>\n              <div>\n                {questions[currentQuestionIndex].options.map(\n                  (option, index) => (\n                    <div key={index}>\n                      <input\n                        type=\"radio\"\n                        name=\"option\"\n                        value={option}\n                        checked={selectedOption === option}\n                        onChange={handleOptionChange}\n                      />\n                      {option}\n                    </div>\n                  )\n                )}\n              </div>\n              <div className=\"button-container\">\n                <button onClick={handleVerifyAnswer}>\n                  Verificar Respuesta\n                </button>\n                {showResultMessage && (\n                  <div\n                    className={\n                      resultMessage === \"¡Respuesta Correcta!\"\n                        ? \"correct\"\n                        : \"incorrect\"\n                    }\n                  >\n                    {resultMessage}\n                  </div>\n                )}\n                <button onClick={handleNextQuestion}>Siguiente Pregunta</button>\n                <button onClick={handleResetQuiz}>Reiniciar Quiz</button>\n              </div>\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}