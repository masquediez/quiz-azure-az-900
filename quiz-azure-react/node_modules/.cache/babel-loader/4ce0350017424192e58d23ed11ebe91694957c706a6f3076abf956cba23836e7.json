{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\github\\\\quiz-azure-react\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\n// Archivos JSON con textos estáticos en diferentes idiomas\nimport textosES from \"./textos-es.json\";\nimport textosEN from \"./textos-en.json\";\nimport textosDE from \"./textos-de.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [language, setLanguage] = useState(\"es\"); // Estado para el idioma seleccionado\n\n  const [selectedLanguage, setSelectedLanguage] = useState(\"es\"); // Estado para el botón de idioma seleccionado\n\n  useEffect(() => {\n    // Cargar las preguntas solo al inicio\n    const fetchQuestions = async () => {\n      const fetchedQuestions = await loadQuestionsByLanguage(language);\n      if (fetchedQuestions.length > 0) {\n        const shuffledQuestions = shuffleArray(fetchedQuestions);\n        setQuestions(shuffledQuestions);\n        setSelectedQuestions(shuffledQuestions.slice(0, numQuestions));\n      }\n    };\n    fetchQuestions();\n  }, [language]); // Añadir language a la dependencia para actualizar preguntas al cambiar idioma\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const loadQuestionsByLanguage = async lang => {\n    try {\n      const response = await axios.get(`http://localhost:3001/questions-${lang}.json`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      return [];\n    }\n  };\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n    setShowCorrectAnswer(false);\n  };\n  const checkAnswer = () => {\n    var _selectedQuestions$cu;\n    if (selectedOption === ((_selectedQuestions$cu = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu === void 0 ? void 0 : _selectedQuestions$cu.answer)) {\n      setScore(prevScore => prevScore + 1);\n      setAnswerMessage(textos[language].respuestaCorrecta);\n    } else {\n      setAnswerMessage(textos[language].respuestaIncorrecta);\n    }\n    setShowCorrectAnswer(true);\n  };\n  const handleNextQuestion = () => {\n    var _selectedQuestions$cu2;\n    if (selectedOption === ((_selectedQuestions$cu2 = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu2 === void 0 ? void 0 : _selectedQuestions$cu2.answer)) {\n      setScore(prevScore => prevScore + 1); // Contabiliza la respuesta correcta\n    }\n    setShowCorrectAnswer(false);\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScore(true);\n    }\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n  };\n  const handleResetQuiz = () => {\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setSelectedQuestions(shuffleArray(questions).slice(0, numQuestions));\n    setTimeLeft(60);\n  };\n  const handleNumQuestionsChange = e => {\n    setNumQuestions(Number(e.target.value));\n  };\n  const startQuiz = () => {\n    setSelectedQuestions(shuffleArray(questions).slice(0, numQuestions));\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n  };\n  const changeLanguage = async lang => {\n    setLanguage(lang);\n    setSelectedLanguage(lang); // Marca el botón de idioma seleccionado\n\n    const fetchedQuestions = await loadQuestionsByLanguage(lang);\n    if (fetchedQuestions.length > 0) {\n      const shuffledQuestions = shuffleArray(fetchedQuestions);\n      setQuestions(shuffledQuestions);\n      setSelectedQuestions(shuffledQuestions.slice(0, numQuestions));\n      setCurrentQuestionIndex(0); // Reiniciar índice de pregunta al cambiar idioma\n      setShowScore(false); // Ocultar puntuación al cambiar idioma\n      setScore(0); // Reiniciar puntuación al cambiar idioma\n      setSelectedOption(\"\"); // Reiniciar opción seleccionada al cambiar idioma\n      setAnswerMessage(\"\"); // Limpiar mensaje de respuesta al cambiar idioma\n      setTimeLeft(60); // Reiniciar tiempo al cambiar idioma\n    }\n  };\n\n  // Definición de textos estáticos según el idioma seleccionado\n  const textos = {\n    es: textosES,\n    en: textosEN,\n    de: textosDE\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedLanguage === \"es\" ? \"selected\" : \"\",\n        onClick: () => changeLanguage(\"es\"),\n        children: \"ES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedLanguage === \"en\" ? \"selected\" : \"\",\n        onClick: () => changeLanguage(\"en\"),\n        children: \"EN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedLanguage === \"de\" ? \"selected\" : \"\",\n        onClick: () => changeLanguage(\"de\"),\n        children: \"DE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [textos[language].puntuacion, \": \", score, \" / \", numQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [textos[language].porcentajeAciertos, \":\", \" \", (score / numQuestions * 100).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetQuiz,\n            children: textos[language].reiniciarQuiz\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [textos[language].elegirCantidadPreguntas, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: questions.length,\n              value: numQuestions,\n              onChange: handleNumQuestionsChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startQuiz,\n            children: textos[language].iniciarQuiz\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), selectedQuestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer\",\n            children: [textos[language].tiempoRestante, \": \", timeLeft, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedQuestions[currentQuestionIndex].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedQuestions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `option ${showCorrectAnswer && option === selectedQuestions[currentQuestionIndex].answer ? \"correct\" : showCorrectAnswer && option === selectedOption ? \"incorrect\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"option\",\n                value: option,\n                checked: selectedOption === option,\n                onChange: handleOptionChange,\n                disabled: showCorrectAnswer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 25\n              }, this), option]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: checkAnswer,\n              disabled: showCorrectAnswer,\n              children: textos[language].verificarRespuesta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), answerMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: answerMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextQuestion,\n              children: textos[language].siguientePregunta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dg/b/66LyCBz97Bl+BwbC5toA8w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","textosES","textosEN","textosDE","jsxDEV","_jsxDEV","shuffleArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","App","_s","questions","setQuestions","selectedQuestions","setSelectedQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","answerMessage","setAnswerMessage","numQuestions","setNumQuestions","showCorrectAnswer","setShowCorrectAnswer","language","setLanguage","selectedLanguage","setSelectedLanguage","fetchQuestions","fetchedQuestions","loadQuestionsByLanguage","shuffledQuestions","slice","handleNextQuestion","timer","setInterval","prevTime","clearInterval","lang","response","get","data","error","console","handleOptionChange","e","target","value","checkAnswer","_selectedQuestions$cu","answer","prevScore","textos","respuestaCorrecta","respuestaIncorrecta","_selectedQuestions$cu2","handleResetQuiz","handleNumQuestionsChange","Number","startQuiz","changeLanguage","es","en","de","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","puntuacion","porcentajeAciertos","toFixed","reiniciarQuiz","elegirCantidadPreguntas","type","min","max","onChange","iniciarQuiz","tiempoRestante","question","options","map","option","index","name","checked","disabled","verificarRespuesta","siguientePregunta","_c","$RefreshReg$"],"sources":["C:/Users/gabri/github/quiz-azure-react/quiz-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\n// Archivos JSON con textos estáticos en diferentes idiomas\nimport textosES from \"./textos-es.json\";\nimport textosEN from \"./textos-en.json\";\nimport textosDE from \"./textos-de.json\";\n\nconst shuffleArray = (array) => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [language, setLanguage] = useState(\"es\"); // Estado para el idioma seleccionado\n\n  const [selectedLanguage, setSelectedLanguage] = useState(\"es\"); // Estado para el botón de idioma seleccionado\n\n  useEffect(() => {\n    // Cargar las preguntas solo al inicio\n    const fetchQuestions = async () => {\n      const fetchedQuestions = await loadQuestionsByLanguage(language);\n      if (fetchedQuestions.length > 0) {\n        const shuffledQuestions = shuffleArray(fetchedQuestions);\n        setQuestions(shuffledQuestions);\n        setSelectedQuestions(shuffledQuestions.slice(0, numQuestions));\n      }\n    };\n    fetchQuestions();\n  }, [language]); // Añadir language a la dependencia para actualizar preguntas al cambiar idioma\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft((prevTime) => prevTime - 1);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  const loadQuestionsByLanguage = async (lang) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:3001/questions-${lang}.json`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      return [];\n    }\n  };\n\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n    setShowCorrectAnswer(false);\n  };\n\n  const checkAnswer = () => {\n    if (selectedOption === selectedQuestions[currentQuestionIndex]?.answer) {\n      setScore((prevScore) => prevScore + 1);\n      setAnswerMessage(textos[language].respuestaCorrecta);\n    } else {\n      setAnswerMessage(textos[language].respuestaIncorrecta);\n    }\n    setShowCorrectAnswer(true);\n  };\n\n  const handleNextQuestion = () => {\n    if (selectedOption === selectedQuestions[currentQuestionIndex]?.answer) {\n      setScore((prevScore) => prevScore + 1); // Contabiliza la respuesta correcta\n    }\n\n    setShowCorrectAnswer(false);\n\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScore(true);\n    }\n\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n  };\n\n  const handleResetQuiz = () => {\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setSelectedQuestions(shuffleArray(questions).slice(0, numQuestions));\n    setTimeLeft(60);\n  };\n\n  const handleNumQuestionsChange = (e) => {\n    setNumQuestions(Number(e.target.value));\n  };\n\n  const startQuiz = () => {\n    setSelectedQuestions(shuffleArray(questions).slice(0, numQuestions));\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n  };\n\n  const changeLanguage = async (lang) => {\n    setLanguage(lang);\n    setSelectedLanguage(lang); // Marca el botón de idioma seleccionado\n\n    const fetchedQuestions = await loadQuestionsByLanguage(lang);\n    if (fetchedQuestions.length > 0) {\n      const shuffledQuestions = shuffleArray(fetchedQuestions);\n      setQuestions(shuffledQuestions);\n      setSelectedQuestions(shuffledQuestions.slice(0, numQuestions));\n      setCurrentQuestionIndex(0); // Reiniciar índice de pregunta al cambiar idioma\n      setShowScore(false); // Ocultar puntuación al cambiar idioma\n      setScore(0); // Reiniciar puntuación al cambiar idioma\n      setSelectedOption(\"\"); // Reiniciar opción seleccionada al cambiar idioma\n      setAnswerMessage(\"\"); // Limpiar mensaje de respuesta al cambiar idioma\n      setTimeLeft(60); // Reiniciar tiempo al cambiar idioma\n    }\n  };\n\n  // Definición de textos estáticos según el idioma seleccionado\n  const textos = {\n    es: textosES,\n    en: textosEN,\n    de: textosDE,\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"language-buttons\">\n        <button\n          className={selectedLanguage === \"es\" ? \"selected\" : \"\"}\n          onClick={() => changeLanguage(\"es\")}\n        >\n          ES\n        </button>\n        <button\n          className={selectedLanguage === \"en\" ? \"selected\" : \"\"}\n          onClick={() => changeLanguage(\"en\")}\n        >\n          EN\n        </button>\n        <button\n          className={selectedLanguage === \"de\" ? \"selected\" : \"\"}\n          onClick={() => changeLanguage(\"de\")}\n        >\n          DE\n        </button>\n      </div>\n      <div className=\"container\">\n        {showScore ? (\n          <div>\n            <p>\n              {textos[language].puntuacion}: {score} / {numQuestions}\n            </p>\n            <p>\n              {textos[language].porcentajeAciertos}:{\" \"}\n              {((score / numQuestions) * 100).toFixed(2)}%\n            </p>\n            <div className=\"button-container\">\n              <button onClick={handleResetQuiz}>\n                {textos[language].reiniciarQuiz}\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div>\n              <label>\n                {textos[language].elegirCantidadPreguntas}\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max={questions.length}\n                  value={numQuestions}\n                  onChange={handleNumQuestionsChange}\n                />\n              </label>\n              <button onClick={startQuiz}>\n                {textos[language].iniciarQuiz}\n              </button>\n            </div>\n            {selectedQuestions.length > 0 && (\n              <div>\n                <div className=\"timer\">\n                  {textos[language].tiempoRestante}: {timeLeft}s\n                </div>\n                <h2>{selectedQuestions[currentQuestionIndex].question}</h2>\n                <div>\n                  {selectedQuestions[currentQuestionIndex].options.map(\n                    (option, index) => (\n                      <div\n                        key={index}\n                        className={`option ${\n                          showCorrectAnswer &&\n                          option ===\n                            selectedQuestions[currentQuestionIndex].answer\n                            ? \"correct\"\n                            : showCorrectAnswer && option === selectedOption\n                            ? \"incorrect\"\n                            : \"\"\n                        }`}\n                      >\n                        <input\n                          type=\"radio\"\n                          name=\"option\"\n                          value={option}\n                          checked={selectedOption === option}\n                          onChange={handleOptionChange}\n                          disabled={showCorrectAnswer}\n                        />\n                        {option}\n                      </div>\n                    )\n                  )}\n                </div>\n                <div className=\"button-container\">\n                  <button onClick={checkAnswer} disabled={showCorrectAnswer}>\n                    {textos[language].verificarRespuesta}\n                  </button>\n                  {answerMessage && <p>{answerMessage}</p>}\n                  <button onClick={handleNextQuestion}>\n                    {textos[language].siguientePregunta}\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}