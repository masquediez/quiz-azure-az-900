{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\github\\\\azure-quiz-2\\\\quiz-azure-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\n// Archivos JSON con textos estÃ¡ticos en diferentes idiomas\nimport textosES from \"./textos-es.json\";\nimport textosEN from \"./textos-en.json\";\nimport textosDE from \"./textos-de.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\nconst App = () => {\n  _s();\n  var _selectedQuestions$cu3, _selectedQuestions$cu4;\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [language, setLanguage] = useState(\"es\");\n  const [selectedLanguage, setSelectedLanguage] = useState(\"es\");\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [currentPercentage, setCurrentPercentage] = useState(0);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const fetchedQuestions = await loadQuestionsByLanguage(language);\n      if (fetchedQuestions.length > 0) {\n        const shuffledQuestions = shuffleArray(fetchedQuestions);\n        setQuestions(shuffledQuestions);\n      }\n    };\n    fetchQuestions();\n  }, [language]);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 100);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const loadQuestionsByLanguage = async lang => {\n    try {\n      const response = await axios.get(`http://localhost:3001/questions-${lang}.json`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      return [];\n    }\n  };\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n    setShowCorrectAnswer(false);\n  };\n  const checkAnswer = () => {\n    var _selectedQuestions$cu;\n    if (selectedOption === ((_selectedQuestions$cu = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu === void 0 ? void 0 : _selectedQuestions$cu.answer)) {\n      setScore(prevScore => prevScore + 0);\n      setAnswerMessage(textos[language].respuestaCorrecta);\n    } else {\n      setAnswerMessage(textos[language].respuestaIncorrecta);\n    }\n    setShowCorrectAnswer(true);\n  };\n  const handleNextQuestion = () => {\n    var _selectedQuestions$cu2;\n    if (selectedOption === ((_selectedQuestions$cu2 = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu2 === void 0 ? void 0 : _selectedQuestions$cu2.answer)) {\n      setScore(prevScore => prevScore + 1);\n      setAnswerMessage(textos[language].respuestaCorrecta);\n    } else {\n      setAnswerMessage(textos[language].respuestaIncorrecta);\n    }\n    const nextPercentage = (score + 1) / (currentQuestionIndex + 1) * 100;\n    setTimeout(() => {\n      setShowCorrectAnswer(false);\n      setAnswerMessage(\"\");\n      if (currentQuestionIndex < selectedQuestions.length - 1) {\n        setCurrentPercentage(nextPercentage);\n        setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n        setSelectedOption(\"\");\n        setTimeLeft(60);\n      } else {\n        setShowScore(true);\n      }\n    }, 1000);\n  };\n  const handleResetQuiz = () => {\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setQuizStarted(false);\n    setSelectedQuestions([]);\n    setTimeLeft(60);\n    setCurrentPercentage(0);\n  };\n  const handleNumQuestionsChange = e => {\n    setNumQuestions(Number(e.target.value));\n  };\n  const startQuiz = () => {\n    if (questions.length === 0) {\n      console.error(\"No questions loaded\");\n      return;\n    }\n    setSelectedQuestions(shuffleArray(questions).slice(0, numQuestions));\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n    setQuizStarted(true);\n  };\n  const changeLanguage = lang => {\n    setLanguage(lang);\n    setSelectedLanguage(lang);\n  };\n  const textos = {\n    es: textosES,\n    en: textosEN,\n    de: textosDE\n  };\n  const getProgressColor = percentage => {\n    return percentage >= 70 ? \"green\" : \"red\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz Azure AZ900\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedLanguage === \"es\" ? \"selected\" : \"\",\n        onClick: () => changeLanguage(\"es\"),\n        children: \"ES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedLanguage === \"en\" ? \"selected\" : \"\",\n        onClick: () => changeLanguage(\"en\"),\n        children: \"EN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedLanguage === \"de\" ? \"selected\" : \"\",\n        onClick: () => changeLanguage(\"de\"),\n        children: \"DE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [!quizStarted && !showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start-quiz\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [textos[language].elegirCantidadPreguntas, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            max: questions.length,\n            value: numQuestions,\n            onChange: handleNumQuestionsChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-quiz-button\",\n          onClick: startQuiz,\n          children: textos[language].iniciarQuiz\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), quizStarted && !showScore && selectedQuestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [textos[language].tiempoRestante, \": \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: (_selectedQuestions$cu3 = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu3 === void 0 ? void 0 : _selectedQuestions$cu3.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (_selectedQuestions$cu4 = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu4 === void 0 ? void 0 : _selectedQuestions$cu4.options.map((option, index) => {\n            var _selectedQuestions$cu5, _selectedQuestions$cu6;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `option ${showCorrectAnswer && option === ((_selectedQuestions$cu5 = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu5 === void 0 ? void 0 : _selectedQuestions$cu5.answer) ? \"correct\" : showCorrectAnswer && option !== ((_selectedQuestions$cu6 = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu6 === void 0 ? void 0 : _selectedQuestions$cu6.answer) ? \"incorrect\" : selectedOption === option ? \"selected\" : \"\"}`,\n              onClick: () => handleOptionChange(option),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"option\",\n                value: option,\n                checked: selectedOption === option,\n                onChange: () => handleOptionChange(option),\n                disabled: showCorrectAnswer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this), option]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"verificar\",\n            onClick: checkAnswer,\n            disabled: showCorrectAnswer,\n            children: textos[language].verificarRespuesta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), showCorrectAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: answerMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"siguientePregunta\",\n            onClick: handleNextQuestion,\n            children: textos[language].siguientePregunta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [textos[language].pregunta, \" \", currentQuestionIndex + 1, \" \", textos[language].de, \" \", numQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [textos[language].porcentajeAciertosActual, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                style: {\n                  width: `${currentQuestionIndex === 0 ? 0 : (score / currentQuestionIndex * 100).toFixed(2)}%`,\n                  backgroundColor: getProgressColor(currentQuestionIndex === 0 ? 0 : score / currentQuestionIndex * 100)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: currentQuestionIndex === 0 ? \"0%\" : `${(score / currentQuestionIndex * 100).toFixed(2)}%`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [textos[language].puntuacion, \": \", score, \" / \", numQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [textos[language].porcentajeAciertos, (score / selectedQuestions.length * 100).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"siguientePregunta\",\n            onClick: handleResetQuiz,\n            children: textos[language].reiniciarQuiz\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AFk6WNnytn2KVVxB03W9DkUvX0k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","textosES","textosEN","textosDE","jsxDEV","_jsxDEV","shuffleArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","App","_s","_selectedQuestions$cu3","_selectedQuestions$cu4","questions","setQuestions","selectedQuestions","setSelectedQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","answerMessage","setAnswerMessage","numQuestions","setNumQuestions","showCorrectAnswer","setShowCorrectAnswer","language","setLanguage","selectedLanguage","setSelectedLanguage","quizStarted","setQuizStarted","currentPercentage","setCurrentPercentage","fetchQuestions","fetchedQuestions","loadQuestionsByLanguage","shuffledQuestions","handleNextQuestion","timer","setInterval","prevTime","clearInterval","lang","response","get","data","error","console","handleOptionChange","option","checkAnswer","_selectedQuestions$cu","answer","prevScore","textos","respuestaCorrecta","respuestaIncorrecta","_selectedQuestions$cu2","nextPercentage","setTimeout","prevIndex","handleResetQuiz","handleNumQuestionsChange","e","Number","target","value","startQuiz","slice","changeLanguage","es","en","de","getProgressColor","percentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","elegirCantidadPreguntas","type","min","max","onChange","iniciarQuiz","tiempoRestante","question","options","map","index","_selectedQuestions$cu5","_selectedQuestions$cu6","name","checked","disabled","verificarRespuesta","siguientePregunta","pregunta","porcentajeAciertosActual","style","width","toFixed","backgroundColor","puntuacion","porcentajeAciertos","reiniciarQuiz","_c","$RefreshReg$"],"sources":["C:/Users/gabri/github/azure-quiz-2/quiz-azure-react/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\n\r\n// Archivos JSON con textos estÃ¡ticos en diferentes idiomas\r\nimport textosES from \"./textos-es.json\";\r\nimport textosEN from \"./textos-en.json\";\r\nimport textosDE from \"./textos-de.json\";\r\n\r\nconst shuffleArray = (array) => {\r\n  let currentIndex = array.length;\r\n  let temporaryValue, randomIndex;\r\n\r\n  while (currentIndex !== 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return array;\r\n};\r\n\r\nconst App = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(60);\r\n  const [answerMessage, setAnswerMessage] = useState(\"\");\r\n  const [numQuestions, setNumQuestions] = useState(5);\r\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\r\n  const [language, setLanguage] = useState(\"es\");\r\n  const [selectedLanguage, setSelectedLanguage] = useState(\"es\");\r\n  const [quizStarted, setQuizStarted] = useState(false);\r\n  const [currentPercentage, setCurrentPercentage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      const fetchedQuestions = await loadQuestionsByLanguage(language);\r\n      if (fetchedQuestions.length > 0) {\r\n        const shuffledQuestions = shuffleArray(fetchedQuestions);\r\n        setQuestions(shuffledQuestions);\r\n      }\r\n    };\r\n    fetchQuestions();\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      handleNextQuestion();\r\n    }\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prevTime) => prevTime - 1);\r\n    }, 100);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft]);\r\n\r\n  const loadQuestionsByLanguage = async (lang) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3001/questions-${lang}.json`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching questions:\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const handleOptionChange = (option) => {\r\n    setSelectedOption(option);\r\n    setShowCorrectAnswer(false);\r\n  };\r\n\r\n  const checkAnswer = () => {\r\n    if (selectedOption === selectedQuestions[currentQuestionIndex]?.answer) {\r\n      setScore((prevScore) => prevScore + 0);\r\n      setAnswerMessage(textos[language].respuestaCorrecta);\r\n    } else {\r\n      setAnswerMessage(textos[language].respuestaIncorrecta);\r\n    }\r\n    setShowCorrectAnswer(true);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (selectedOption === selectedQuestions[currentQuestionIndex]?.answer) {\r\n      setScore((prevScore) => prevScore + 1);\r\n      setAnswerMessage(textos[language].respuestaCorrecta);\r\n    } else {\r\n      setAnswerMessage(textos[language].respuestaIncorrecta);\r\n    }\r\n\r\n    const nextPercentage = ((score + 1) / (currentQuestionIndex + 1)) * 100;\r\n\r\n    setTimeout(() => {\r\n      setShowCorrectAnswer(false);\r\n      setAnswerMessage(\"\");\r\n\r\n      if (currentQuestionIndex < selectedQuestions.length - 1) {\r\n        setCurrentPercentage(nextPercentage);\r\n        setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n        setSelectedOption(\"\");\r\n        setTimeLeft(60);\r\n      } else {\r\n        setShowScore(true);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const handleResetQuiz = () => {\r\n    setShowScore(false);\r\n    setCurrentQuestionIndex(0);\r\n    setScore(0);\r\n    setQuizStarted(false);\r\n    setSelectedQuestions([]);\r\n    setTimeLeft(60);\r\n    setCurrentPercentage(0);\r\n  };\r\n\r\n  const handleNumQuestionsChange = (e) => {\r\n    setNumQuestions(Number(e.target.value));\r\n  };\r\n\r\n  const startQuiz = () => {\r\n    if (questions.length === 0) {\r\n      console.error(\"No questions loaded\");\r\n      return;\r\n    }\r\n    setSelectedQuestions(shuffleArray(questions).slice(0, numQuestions));\r\n    setShowScore(false);\r\n    setCurrentQuestionIndex(0);\r\n    setScore(0);\r\n    setTimeLeft(60);\r\n    setQuizStarted(true);\r\n  };\r\n\r\n  const changeLanguage = (lang) => {\r\n    setLanguage(lang);\r\n    setSelectedLanguage(lang);\r\n  };\r\n\r\n  const textos = {\r\n    es: textosES,\r\n    en: textosEN,\r\n    de: textosDE,\r\n  };\r\n\r\n  const getProgressColor = (percentage) => {\r\n    return percentage >= 70 ? \"green\" : \"red\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Quiz Azure AZ900</h1>\r\n      <div className=\"language-buttons\">\r\n        <button\r\n          className={selectedLanguage === \"es\" ? \"selected\" : \"\"}\r\n          onClick={() => changeLanguage(\"es\")}\r\n        >\r\n          ES\r\n        </button>\r\n        <button\r\n          className={selectedLanguage === \"en\" ? \"selected\" : \"\"}\r\n          onClick={() => changeLanguage(\"en\")}\r\n        >\r\n          EN\r\n        </button>\r\n        <button\r\n          className={selectedLanguage === \"de\" ? \"selected\" : \"\"}\r\n          onClick={() => changeLanguage(\"de\")}\r\n        >\r\n          DE\r\n        </button>\r\n      </div>\r\n      <div className=\"container\">\r\n        {!quizStarted && !showScore && (\r\n          <div className=\"start-quiz\">\r\n            <label>\r\n              {textos[language].elegirCantidadPreguntas}\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max={questions.length}\r\n                value={numQuestions}\r\n                onChange={handleNumQuestionsChange}\r\n              />\r\n            </label>\r\n            <button className=\"start-quiz-button\" onClick={startQuiz}>\r\n              {textos[language].iniciarQuiz}\r\n            </button>\r\n          </div>\r\n        )}\r\n        {quizStarted && !showScore && selectedQuestions.length > 0 && (\r\n          <div>\r\n            <div className=\"timer\">\r\n              {textos[language].tiempoRestante}: {timeLeft}s\r\n            </div>\r\n            <h2>{selectedQuestions[currentQuestionIndex]?.question}</h2>\r\n            <div>\r\n              {selectedQuestions[currentQuestionIndex]?.options.map(\r\n                (option, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className={`option ${\r\n                      showCorrectAnswer &&\r\n                      option === selectedQuestions[currentQuestionIndex]?.answer\r\n                        ? \"correct\"\r\n                        : showCorrectAnswer &&\r\n                          option !==\r\n                            selectedQuestions[currentQuestionIndex]?.answer\r\n                        ? \"incorrect\"\r\n                        : selectedOption === option\r\n                        ? \"selected\"\r\n                        : \"\"\r\n                    }`}\r\n                    onClick={() => handleOptionChange(option)}\r\n                  >\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"option\"\r\n                      value={option}\r\n                      checked={selectedOption === option}\r\n                      onChange={() => handleOptionChange(option)}\r\n                      disabled={showCorrectAnswer}\r\n                    />\r\n                    {option}\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n            <div className=\"button-container\">\r\n              <button\r\n                className=\"verificar\"\r\n                onClick={checkAnswer}\r\n                disabled={showCorrectAnswer}\r\n              >\r\n                {textos[language].verificarRespuesta}\r\n              </button>\r\n              {showCorrectAnswer && <p>{answerMessage}</p>}\r\n              <button\r\n                className=\"siguientePregunta\"\r\n                onClick={handleNextQuestion}\r\n              >\r\n                {textos[language].siguientePregunta}\r\n              </button>\r\n            </div>\r\n            <div className=\"question-info\">\r\n              <p>\r\n                {textos[language].pregunta} {currentQuestionIndex + 1}{\" \"}\r\n                {textos[language].de} {numQuestions}\r\n              </p>\r\n              <p>\r\n                {textos[language].porcentajeAciertosActual}:\r\n                <div className=\"progress-bar-container\">\r\n                  <div\r\n                    className=\"progress-bar\"\r\n                    style={{\r\n                      width: `${\r\n                        currentQuestionIndex === 0\r\n                          ? 0\r\n                          : ((score / currentQuestionIndex) * 100).toFixed(2)\r\n                      }%`,\r\n                      backgroundColor: getProgressColor(\r\n                        currentQuestionIndex === 0\r\n                          ? 0\r\n                          : (score / currentQuestionIndex) * 100\r\n                      ),\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n                <span>\r\n                  {currentQuestionIndex === 0\r\n                    ? \"0%\"\r\n                    : `${((score / currentQuestionIndex) * 100).toFixed(2)}%`}\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {showScore && (\r\n          <div>\r\n            <p>\r\n              {textos[language].puntuacion}: {score} / {numQuestions}\r\n            </p>\r\n            <p>\r\n              {textos[language].porcentajeAciertos}\r\n              {((score / selectedQuestions.length) * 100).toFixed(2)}%\r\n            </p>\r\n            <div className=\"button-container\">\r\n              <button className=\"siguientePregunta\" onClick={handleResetQuiz}>\r\n                {textos[language].reiniciarQuiz}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}