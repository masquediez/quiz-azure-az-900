{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\github\\\\quiz-azure-react\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/questions\");\n        setQuestions(response.data);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  const handleNextQuestion = () => {\n    var _questions$currentQue;\n    // Validar si se ha seleccionado una opción antes de avanzar\n    if (selectedOption === \"\") {\n      alert(\"Seleccione una opción antes de continuar.\");\n      return;\n    }\n\n    // Verificar si la opción seleccionada es correcta\n    if (selectedOption === ((_questions$currentQue = questions[currentQuestionIndex]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.answer)) {\n      setScore(score + 1);\n    }\n\n    // Limpiar la selección y reiniciar el temporizador\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n\n    // Avanzar a la siguiente pregunta o mostrar el puntaje final\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScore(true);\n    }\n  };\n  const handleResetQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowScore(false);\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Tu puntaje es \", score, \" de \", questions.length, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetQuiz,\n            children: \"Reiniciar Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : questions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [\"Tiempo restante: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: questions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"option\",\n              value: option,\n              checked: selectedOption === option,\n              onChange: handleOptionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 23\n            }, this), option]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextQuestion,\n            children: \"Siguiente Pregunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetQuiz,\n            children: \"Reiniciar Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/ffSoICuiK/FMwDcG+4NeW4poYo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","fetchQuestions","response","get","data","error","console","handleNextQuestion","timer","setInterval","prevTime","clearInterval","handleOptionChange","e","target","value","_questions$currentQue","alert","answer","length","handleResetQuiz","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","option","index","type","name","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/gabri/github/quiz-azure-react/quiz-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/questions\");\n        setQuestions(response.data);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft((prevTime) => prevTime - 1);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n  };\n\n  const handleNextQuestion = () => {\n    // Validar si se ha seleccionado una opción antes de avanzar\n    if (selectedOption === \"\") {\n      alert(\"Seleccione una opción antes de continuar.\");\n      return;\n    }\n\n    // Verificar si la opción seleccionada es correcta\n    if (selectedOption === questions[currentQuestionIndex]?.answer) {\n      setScore(score + 1);\n    }\n\n    // Limpiar la selección y reiniciar el temporizador\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n\n    // Avanzar a la siguiente pregunta o mostrar el puntaje final\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleResetQuiz = () => {\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowScore(false);\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        {showScore ? (\n          <div>\n            Tu puntaje es {score} de {questions.length}\n            <div className=\"button-container\">\n              <button onClick={handleResetQuiz}>Reiniciar Quiz</button>\n            </div>\n          </div>\n        ) : (\n          questions.length > 0 && (\n            <div>\n              <div className=\"timer\">Tiempo restante: {timeLeft}s</div>\n              <h2>{questions[currentQuestionIndex].question}</h2>\n              <div>\n                {questions[currentQuestionIndex].options.map(\n                  (option, index) => (\n                    <div key={index}>\n                      <input\n                        type=\"radio\"\n                        name=\"option\"\n                        value={option}\n                        checked={selectedOption === option}\n                        onChange={handleOptionChange}\n                      />\n                      {option}\n                    </div>\n                  )\n                )}\n              </div>\n              <div className=\"button-container\">\n                <button onClick={handleNextQuestion}>Siguiente Pregunta</button>\n                <button onClick={handleResetQuiz}>Reiniciar Quiz</button>\n              </div>\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}