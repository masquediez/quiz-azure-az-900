{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\github\\\\quiz-azure-react\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\n// Archivos JSON con textos estáticos en diferentes idiomas\nimport textosES from \"./textos-es.json\";\nimport textosEN from \"./textos-en.json\";\nimport textosDE from \"./textos-de.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [language, setLanguage] = useState(\"es\"); // Estado para controlar el idioma seleccionado\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/questions\");\n        const shuffledQuestions = shuffleArray(response.data);\n        setQuestions(shuffledQuestions);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    // No iniciar el quiz automáticamente al cambiar de idioma\n    // fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n    setShowCorrectAnswer(false);\n  };\n  const checkAnswer = () => {\n    var _selectedQuestions$cu;\n    if (selectedOption === ((_selectedQuestions$cu = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu === void 0 ? void 0 : _selectedQuestions$cu.answer)) {\n      setScore(prevScore => prevScore + 1);\n      setAnswerMessage(textos[language].respuestaCorrecta);\n    } else {\n      setAnswerMessage(textos[language].respuestaIncorrecta);\n    }\n    setShowCorrectAnswer(true);\n  };\n  const handleNextQuestion = () => {\n    setAnswerMessage(\"\");\n    setShowCorrectAnswer(false);\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScore(true);\n    }\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n  };\n  const handleResetQuiz = () => {\n    window.location.reload();\n  };\n  const handleNumQuestionsChange = e => {\n    setNumQuestions(Number(e.target.value));\n  };\n  const startQuiz = () => {\n    const shuffledQuestions = shuffleArray(questions);\n    const selected = shuffledQuestions.slice(0, numQuestions);\n    setSelectedQuestions(selected);\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n  };\n\n  // Función para cambiar el idioma\n  const handleLanguageChange = lang => {\n    setLanguage(lang);\n    setSelectedQuestions([]);\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n  };\n\n  // Definición de textos estáticos según el idioma seleccionado\n  const textos = {\n    es: textosES,\n    en: textosEN,\n    de: textosDE\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: language === \"es\" ? \"selected\" : \"\",\n          onClick: () => handleLanguageChange(\"es\"),\n          children: \"ES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: language === \"en\" ? \"selected\" : \"\",\n          onClick: () => handleLanguageChange(\"en\"),\n          children: \"EN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: language === \"de\" ? \"selected\" : \"\",\n          onClick: () => handleLanguageChange(\"de\"),\n          children: \"DE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [textos[language].puntuacion, \": \", score, \" /\", \" \", selectedQuestions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [textos[language].porcentajeEficacia, \":\", \" \", (score / selectedQuestions.length * 100).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetQuiz,\n            children: textos[language].reiniciarQuiz\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: selectedQuestions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [textos[language].elegirCantidadPreguntas, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: questions.length,\n              value: numQuestions,\n              onChange: handleNumQuestionsChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startQuiz,\n            children: textos[language].iniciarQuiz\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer\",\n            children: [textos[language].tiempoRestante, \": \", timeLeft, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedQuestions[currentQuestionIndex].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedQuestions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `option ${showCorrectAnswer && option === selectedQuestions[currentQuestionIndex].answer ? \"correct\" : showCorrectAnswer && option === selectedOption ? \"incorrect\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"option\",\n                value: option,\n                checked: selectedOption === option,\n                onChange: handleOptionChange,\n                disabled: showCorrectAnswer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 25\n              }, this), option]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: checkAnswer,\n              disabled: showCorrectAnswer,\n              children: textos[language].verificarRespuesta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this), answerMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: answerMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextQuestion,\n              children: textos[language].siguientePregunta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rPMwlFsTOFhPDvHbA11wdP2vkWY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","textosES","textosEN","textosDE","jsxDEV","_jsxDEV","shuffleArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","App","_s","questions","setQuestions","selectedQuestions","setSelectedQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","answerMessage","setAnswerMessage","numQuestions","setNumQuestions","showCorrectAnswer","setShowCorrectAnswer","language","setLanguage","fetchQuestions","response","get","shuffledQuestions","data","error","console","handleNextQuestion","timer","setInterval","prevTime","clearInterval","handleOptionChange","e","target","value","checkAnswer","_selectedQuestions$cu","answer","prevScore","textos","respuestaCorrecta","respuestaIncorrecta","handleResetQuiz","window","location","reload","handleNumQuestionsChange","Number","startQuiz","selected","slice","handleLanguageChange","lang","es","en","de","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","puntuacion","porcentajeEficacia","toFixed","reiniciarQuiz","elegirCantidadPreguntas","type","min","max","onChange","iniciarQuiz","tiempoRestante","question","options","map","option","index","name","checked","disabled","verificarRespuesta","siguientePregunta","_c","$RefreshReg$"],"sources":["C:/Users/gabri/github/quiz-azure-react/quiz-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\n// Archivos JSON con textos estáticos en diferentes idiomas\nimport textosES from \"./textos-es.json\";\nimport textosEN from \"./textos-en.json\";\nimport textosDE from \"./textos-de.json\";\n\nconst shuffleArray = (array) => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [language, setLanguage] = useState(\"es\"); // Estado para controlar el idioma seleccionado\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/questions\");\n        const shuffledQuestions = shuffleArray(response.data);\n        setQuestions(shuffledQuestions);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    // No iniciar el quiz automáticamente al cambiar de idioma\n    // fetchQuestions();\n  }, []);\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft((prevTime) => prevTime - 1);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n    setShowCorrectAnswer(false);\n  };\n\n  const checkAnswer = () => {\n    if (selectedOption === selectedQuestions[currentQuestionIndex]?.answer) {\n      setScore((prevScore) => prevScore + 1);\n      setAnswerMessage(textos[language].respuestaCorrecta);\n    } else {\n      setAnswerMessage(textos[language].respuestaIncorrecta);\n    }\n    setShowCorrectAnswer(true);\n  };\n\n  const handleNextQuestion = () => {\n    setAnswerMessage(\"\");\n    setShowCorrectAnswer(false);\n\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScore(true);\n    }\n\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n  };\n\n  const handleResetQuiz = () => {\n    window.location.reload();\n  };\n\n  const handleNumQuestionsChange = (e) => {\n    setNumQuestions(Number(e.target.value));\n  };\n\n  const startQuiz = () => {\n    const shuffledQuestions = shuffleArray(questions);\n    const selected = shuffledQuestions.slice(0, numQuestions);\n    setSelectedQuestions(selected);\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n  };\n\n  // Función para cambiar el idioma\n  const handleLanguageChange = (lang) => {\n    setLanguage(lang);\n    setSelectedQuestions([]);\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n  };\n\n  // Definición de textos estáticos según el idioma seleccionado\n  const textos = {\n    es: textosES,\n    en: textosEN,\n    de: textosDE,\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"language-buttons\">\n          <button\n            className={language === \"es\" ? \"selected\" : \"\"}\n            onClick={() => handleLanguageChange(\"es\")}\n          >\n            ES\n          </button>\n          <button\n            className={language === \"en\" ? \"selected\" : \"\"}\n            onClick={() => handleLanguageChange(\"en\")}\n          >\n            EN\n          </button>\n          <button\n            className={language === \"de\" ? \"selected\" : \"\"}\n            onClick={() => handleLanguageChange(\"de\")}\n          >\n            DE\n          </button>\n        </div>\n        {showScore ? (\n          <div>\n            <p>\n              {textos[language].puntuacion}: {score} /{\" \"}\n              {selectedQuestions.length}\n            </p>\n            <p>\n              {textos[language].porcentajeEficacia}:{\" \"}\n              {((score / selectedQuestions.length) * 100).toFixed(2)}%\n            </p>\n            <div className=\"button-container\">\n              <button onClick={handleResetQuiz}>\n                {textos[language].reiniciarQuiz}\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            {selectedQuestions.length === 0 ? (\n              <div>\n                <label>\n                  {textos[language].elegirCantidadPreguntas}\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    max={questions.length}\n                    value={numQuestions}\n                    onChange={handleNumQuestionsChange}\n                  />\n                </label>\n                <button onClick={startQuiz}>\n                  {textos[language].iniciarQuiz}\n                </button>\n              </div>\n            ) : (\n              <div>\n                <div className=\"timer\">\n                  {textos[language].tiempoRestante}: {timeLeft}s\n                </div>\n                <h2>{selectedQuestions[currentQuestionIndex].question}</h2>\n                <div>\n                  {selectedQuestions[currentQuestionIndex].options.map(\n                    (option, index) => (\n                      <div\n                        key={index}\n                        className={`option ${\n                          showCorrectAnswer &&\n                          option ===\n                            selectedQuestions[currentQuestionIndex].answer\n                            ? \"correct\"\n                            : showCorrectAnswer && option === selectedOption\n                            ? \"incorrect\"\n                            : \"\"\n                        }`}\n                      >\n                        <input\n                          type=\"radio\"\n                          name=\"option\"\n                          value={option}\n                          checked={selectedOption === option}\n                          onChange={handleOptionChange}\n                          disabled={showCorrectAnswer}\n                        />\n                        {option}\n                      </div>\n                    )\n                  )}\n                </div>\n                <div className=\"button-container\">\n                  <button onClick={checkAnswer} disabled={showCorrectAnswer}>\n                    {textos[language].verificarRespuesta}\n                  </button>\n                  {answerMessage && <p>{answerMessage}</p>}\n                  <button onClick={handleNextQuestion}>\n                    {textos[language].siguientePregunta}\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;;AAErB;AACA,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,IAAIC,YAAY,GAAGD,KAAK,CAACE,MAAM;EAC/B,IAAIC,cAAc,EAAEC,WAAW;EAE/B,OAAOH,YAAY,KAAK,CAAC,EAAE;IACzBG,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,YAAY,CAAC;IACtDA,YAAY,EAAE;IAEdE,cAAc,GAAGH,KAAK,CAACC,YAAY,CAAC;IACpCD,KAAK,CAACC,YAAY,CAAC,GAAGD,KAAK,CAACI,WAAW,CAAC;IACxCJ,KAAK,CAACI,WAAW,CAAC,GAAGD,cAAc;EACrC;EAEA,OAAOH,KAAK;AACd,CAAC;AAED,MAAMQ,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACsB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkC,YAAY,EAAEC,eAAe,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACoC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACsC,QAAQ,EAAEC,WAAW,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMyC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMxC,KAAK,CAACyC,GAAG,CAAC,iCAAiC,CAAC;QACnE,MAAMC,iBAAiB,GAAGpC,YAAY,CAACkC,QAAQ,CAACG,IAAI,CAAC;QACrDzB,YAAY,CAACwB,iBAAiB,CAAC;MACjC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACD;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EAEN9C,SAAS,CAAC,MAAM;IACd,IAAI+B,QAAQ,KAAK,CAAC,EAAE;MAClBiB,kBAAkB,CAAC,CAAC;IACtB;IACA,MAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BlB,WAAW,CAAEmB,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;IACzC,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;EACnC,CAAC,EAAE,CAAClB,QAAQ,CAAC,CAAC;EAEd,MAAMsB,kBAAkB,GAAIC,CAAC,IAAK;IAChC5B,iBAAiB,CAAC4B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACjClB,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMmB,WAAW,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IACxB,IAAIjC,cAAc,OAAAiC,qBAAA,GAAKrC,iBAAiB,CAACE,oBAAoB,CAAC,cAAAmC,qBAAA,uBAAvCA,qBAAA,CAAyCC,MAAM,GAAE;MACtE/B,QAAQ,CAAEgC,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;MACtC1B,gBAAgB,CAAC2B,MAAM,CAACtB,QAAQ,CAAC,CAACuB,iBAAiB,CAAC;IACtD,CAAC,MAAM;MACL5B,gBAAgB,CAAC2B,MAAM,CAACtB,QAAQ,CAAC,CAACwB,mBAAmB,CAAC;IACxD;IACAzB,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMU,kBAAkB,GAAGA,CAAA,KAAM;IAC/Bd,gBAAgB,CAAC,EAAE,CAAC;IACpBI,oBAAoB,CAAC,KAAK,CAAC;IAE3B,IAAIf,oBAAoB,GAAGF,iBAAiB,CAACV,MAAM,GAAG,CAAC,EAAE;MACvDa,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;IACnD,CAAC,MAAM;MACLO,YAAY,CAAC,IAAI,CAAC;IACpB;IAEAJ,iBAAiB,CAAC,EAAE,CAAC;IACrBM,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,MAAMgC,eAAe,GAAGA,CAAA,KAAM;IAC5BC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,wBAAwB,GAAId,CAAC,IAAK;IACtClB,eAAe,CAACiC,MAAM,CAACf,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;EACzC,CAAC;EAED,MAAMc,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAM1B,iBAAiB,GAAGpC,YAAY,CAACW,SAAS,CAAC;IACjD,MAAMoD,QAAQ,GAAG3B,iBAAiB,CAAC4B,KAAK,CAAC,CAAC,EAAErC,YAAY,CAAC;IACzDb,oBAAoB,CAACiD,QAAQ,CAAC;IAC9BzC,YAAY,CAAC,KAAK,CAAC;IACnBN,uBAAuB,CAAC,CAAC,CAAC;IAC1BI,QAAQ,CAAC,CAAC,CAAC;IACXI,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;;EAED;EACA,MAAMyC,oBAAoB,GAAIC,IAAI,IAAK;IACrClC,WAAW,CAACkC,IAAI,CAAC;IACjBpD,oBAAoB,CAAC,EAAE,CAAC;IACxBQ,YAAY,CAAC,KAAK,CAAC;IACnBN,uBAAuB,CAAC,CAAC,CAAC;IAC1BI,QAAQ,CAAC,CAAC,CAAC;IACXI,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;;EAED;EACA,MAAM6B,MAAM,GAAG;IACbc,EAAE,EAAExE,QAAQ;IACZyE,EAAE,EAAExE,QAAQ;IACZyE,EAAE,EAAExE;EACN,CAAC;EAED,oBACEE,OAAA;IAAKuE,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBxE,OAAA;MAAKuE,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBxE,OAAA;QAAKuE,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BxE,OAAA;UACEuE,SAAS,EAAEvC,QAAQ,KAAK,IAAI,GAAG,UAAU,GAAG,EAAG;UAC/CyC,OAAO,EAAEA,CAAA,KAAMP,oBAAoB,CAAC,IAAI,CAAE;UAAAM,QAAA,EAC3C;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT7E,OAAA;UACEuE,SAAS,EAAEvC,QAAQ,KAAK,IAAI,GAAG,UAAU,GAAG,EAAG;UAC/CyC,OAAO,EAAEA,CAAA,KAAMP,oBAAoB,CAAC,IAAI,CAAE;UAAAM,QAAA,EAC3C;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT7E,OAAA;UACEuE,SAAS,EAAEvC,QAAQ,KAAK,IAAI,GAAG,UAAU,GAAG,EAAG;UAC/CyC,OAAO,EAAEA,CAAA,KAAMP,oBAAoB,CAAC,IAAI,CAAE;UAAAM,QAAA,EAC3C;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACLvD,SAAS,gBACRtB,OAAA;QAAAwE,QAAA,gBACExE,OAAA;UAAAwE,QAAA,GACGlB,MAAM,CAACtB,QAAQ,CAAC,CAAC8C,UAAU,EAAC,IAAE,EAAC1D,KAAK,EAAC,IAAE,EAAC,GAAG,EAC3CN,iBAAiB,CAACV,MAAM;QAAA;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACJ7E,OAAA;UAAAwE,QAAA,GACGlB,MAAM,CAACtB,QAAQ,CAAC,CAAC+C,kBAAkB,EAAC,GAAC,EAAC,GAAG,EACzC,CAAE3D,KAAK,GAAGN,iBAAiB,CAACV,MAAM,GAAI,GAAG,EAAE4E,OAAO,CAAC,CAAC,CAAC,EAAC,GACzD;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJ7E,OAAA;UAAKuE,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC/BxE,OAAA;YAAQyE,OAAO,EAAEhB,eAAgB;YAAAe,QAAA,EAC9BlB,MAAM,CAACtB,QAAQ,CAAC,CAACiD;UAAa;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAEN7E,OAAA;QAAAwE,QAAA,EACG1D,iBAAiB,CAACV,MAAM,KAAK,CAAC,gBAC7BJ,OAAA;UAAAwE,QAAA,gBACExE,OAAA;YAAAwE,QAAA,GACGlB,MAAM,CAACtB,QAAQ,CAAC,CAACkD,uBAAuB,eACzClF,OAAA;cACEmF,IAAI,EAAC,QAAQ;cACbC,GAAG,EAAC,GAAG;cACPC,GAAG,EAAEzE,SAAS,CAACR,MAAO;cACtB6C,KAAK,EAAErB,YAAa;cACpB0D,QAAQ,EAAEzB;YAAyB;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC,eACR7E,OAAA;YAAQyE,OAAO,EAAEV,SAAU;YAAAS,QAAA,EACxBlB,MAAM,CAACtB,QAAQ,CAAC,CAACuD;UAAW;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,gBAEN7E,OAAA;UAAAwE,QAAA,gBACExE,OAAA;YAAKuE,SAAS,EAAC,OAAO;YAAAC,QAAA,GACnBlB,MAAM,CAACtB,QAAQ,CAAC,CAACwD,cAAc,EAAC,IAAE,EAAChE,QAAQ,EAAC,GAC/C;UAAA;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACN7E,OAAA;YAAAwE,QAAA,EAAK1D,iBAAiB,CAACE,oBAAoB,CAAC,CAACyE;UAAQ;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3D7E,OAAA;YAAAwE,QAAA,EACG1D,iBAAiB,CAACE,oBAAoB,CAAC,CAAC0E,OAAO,CAACC,GAAG,CAClD,CAACC,MAAM,EAAEC,KAAK,kBACZ7F,OAAA;cAEEuE,SAAS,EAAE,UACTzC,iBAAiB,IACjB8D,MAAM,KACJ9E,iBAAiB,CAACE,oBAAoB,CAAC,CAACoC,MAAM,GAC5C,SAAS,GACTtB,iBAAiB,IAAI8D,MAAM,KAAK1E,cAAc,GAC9C,WAAW,GACX,EAAE,EACL;cAAAsD,QAAA,gBAEHxE,OAAA;gBACEmF,IAAI,EAAC,OAAO;gBACZW,IAAI,EAAC,QAAQ;gBACb7C,KAAK,EAAE2C,MAAO;gBACdG,OAAO,EAAE7E,cAAc,KAAK0E,MAAO;gBACnCN,QAAQ,EAAExC,kBAAmB;gBAC7BkD,QAAQ,EAAElE;cAAkB;gBAAA4C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7B,CAAC,EACDe,MAAM;YAAA,GAnBFC,KAAK;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAoBP,CAET;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACN7E,OAAA;YAAKuE,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BxE,OAAA;cAAQyE,OAAO,EAAEvB,WAAY;cAAC8C,QAAQ,EAAElE,iBAAkB;cAAA0C,QAAA,EACvDlB,MAAM,CAACtB,QAAQ,CAAC,CAACiE;YAAkB;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC,EACRnD,aAAa,iBAAI1B,OAAA;cAAAwE,QAAA,EAAI9C;YAAa;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxC7E,OAAA;cAAQyE,OAAO,EAAEhC,kBAAmB;cAAA+B,QAAA,EACjClB,MAAM,CAACtB,QAAQ,CAAC,CAACkE;YAAiB;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClE,EAAA,CAjNID,GAAG;AAAAyF,EAAA,GAAHzF,GAAG;AAmNT,eAAeA,GAAG;AAAC,IAAAyF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}