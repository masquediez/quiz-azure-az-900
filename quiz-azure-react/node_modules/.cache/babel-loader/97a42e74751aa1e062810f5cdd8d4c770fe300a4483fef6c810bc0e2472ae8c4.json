{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\github\\\\quiz-azure-react\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\nconst App = () => {\n  _s();\n  var _selectedQuestions$cu3, _selectedQuestions$cu4;\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [language, setLanguage] = useState(\"es\"); // Estado para el idioma seleccionado\n\n  const [selectedLanguage, setSelectedLanguage] = useState(\"es\"); // Estado para el botÃ³n de idioma seleccionado\n  const [showPopup, setShowPopup] = useState(false); // Estado para mostrar u ocultar el pop-up\n  const [popupMessage, setPopupMessage] = useState(\"\"); // Estado para el mensaje del pop-up\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const fetchedQuestions = await loadQuestionsByLanguage(language);\n      if (fetchedQuestions.length > 0) {\n        const shuffledQuestions = shuffleArray(fetchedQuestions);\n        setQuestions(shuffledQuestions);\n      }\n    };\n    fetchQuestions();\n  }, [language]);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const loadQuestionsByLanguage = async lang => {\n    try {\n      const response = await axios.get(`http://localhost:3001/questions-${lang}.json`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      return [];\n    }\n  };\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n    setShowCorrectAnswer(false);\n  };\n  const handleNextQuestion = () => {\n    var _selectedQuestions$cu;\n    if (selectedOption !== ((_selectedQuestions$cu = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu === void 0 ? void 0 : _selectedQuestions$cu.answer)) {\n      var _selectedQuestions$cu2;\n      const correctAnswer = (_selectedQuestions$cu2 = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu2 === void 0 ? void 0 : _selectedQuestions$cu2.answer;\n      setPopupMessage(`La respuesta correcta es: ${correctAnswer}`);\n      setShowPopup(true);\n      return;\n    }\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    setSelectedOption(\"\");\n    setAnswerMessage(\"\");\n    setShowCorrectAnswer(false);\n    setTimeLeft(60);\n  };\n  const handlePopupClose = () => {\n    setShowPopup(false);\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(\"\");\n      setAnswerMessage(\"\");\n      setShowCorrectAnswer(false);\n      setTimeLeft(60);\n    } else {\n      setShowScore(true);\n    }\n  };\n  const handleResetQuiz = () => {\n    window.location.reload();\n  };\n  const handleNumQuestionsChange = e => {\n    setNumQuestions(Number(e.target.value));\n  };\n  const startQuiz = () => {\n    const shuffledQuestions = shuffleArray(questions);\n    const selected = shuffledQuestions.slice(0, numQuestions);\n    setSelectedQuestions(selected);\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n  };\n  const changeLanguage = lang => {\n    setLanguage(lang);\n    setQuestions([]);\n    setSelectedLanguage(lang);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedLanguage === \"es\" ? \"selected\" : \"\",\n          onClick: () => changeLanguage(\"es\"),\n          children: \"ES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedLanguage === \"en\" ? \"selected\" : \"\",\n          onClick: () => changeLanguage(\"en\"),\n          children: \"EN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedLanguage === \"de\" ? \"selected\" : \"\",\n          onClick: () => changeLanguage(\"de\"),\n          children: \"DE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), !selectedQuestions.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Elegir cantidad de preguntas:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            max: questions.length,\n            value: numQuestions,\n            onChange: handleNumQuestionsChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startQuiz,\n          children: \"Iniciar Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [\"Tiempo restante: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: (_selectedQuestions$cu3 = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu3 === void 0 ? void 0 : _selectedQuestions$cu3.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (_selectedQuestions$cu4 = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu4 === void 0 ? void 0 : _selectedQuestions$cu4.options.map((option, index) => {\n            var _selectedQuestions$cu5;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `option ${showCorrectAnswer && option === ((_selectedQuestions$cu5 = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu5 === void 0 ? void 0 : _selectedQuestions$cu5.answer) ? \"correct\" : showCorrectAnswer && option === selectedOption ? \"incorrect\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"option\",\n                value: option,\n                checked: selectedOption === option,\n                onChange: handleOptionChange,\n                disabled: showCorrectAnswer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this), option]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextQuestion,\n            children: \"Siguiente Pregunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: popupMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePopupClose,\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tu puntuaci\\xF3n es \", score, \" de \", selectedQuestions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Porcentaje de aciertos:\", \" \", (score / selectedQuestions.length * 100).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetQuiz,\n            children: \"Reiniciar Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"kT74UOKevV6d6RQb+VLDUvmoybI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","shuffleArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","App","_s","_selectedQuestions$cu3","_selectedQuestions$cu4","questions","setQuestions","selectedQuestions","setSelectedQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","answerMessage","setAnswerMessage","numQuestions","setNumQuestions","showCorrectAnswer","setShowCorrectAnswer","language","setLanguage","selectedLanguage","setSelectedLanguage","showPopup","setShowPopup","popupMessage","setPopupMessage","fetchQuestions","fetchedQuestions","loadQuestionsByLanguage","shuffledQuestions","handleNextQuestion","timer","setInterval","prevTime","clearInterval","lang","response","get","data","error","console","handleOptionChange","e","target","value","_selectedQuestions$cu","answer","_selectedQuestions$cu2","correctAnswer","handlePopupClose","handleResetQuiz","window","location","reload","handleNumQuestionsChange","Number","startQuiz","selected","slice","changeLanguage","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","question","options","map","option","index","_selectedQuestions$cu5","name","checked","disabled","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/gabri/github/quiz-azure-react/quiz-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\nconst shuffleArray = (array) => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [language, setLanguage] = useState(\"es\"); // Estado para el idioma seleccionado\n\n  const [selectedLanguage, setSelectedLanguage] = useState(\"es\"); // Estado para el botÃ³n de idioma seleccionado\n  const [showPopup, setShowPopup] = useState(false); // Estado para mostrar u ocultar el pop-up\n  const [popupMessage, setPopupMessage] = useState(\"\"); // Estado para el mensaje del pop-up\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const fetchedQuestions = await loadQuestionsByLanguage(language);\n      if (fetchedQuestions.length > 0) {\n        const shuffledQuestions = shuffleArray(fetchedQuestions);\n        setQuestions(shuffledQuestions);\n      }\n    };\n    fetchQuestions();\n  }, [language]);\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft((prevTime) => prevTime - 1);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  const loadQuestionsByLanguage = async (lang) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:3001/questions-${lang}.json`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      return [];\n    }\n  };\n\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n    setShowCorrectAnswer(false);\n  };\n\n  const handleNextQuestion = () => {\n    if (selectedOption !== selectedQuestions[currentQuestionIndex]?.answer) {\n      const correctAnswer = selectedQuestions[currentQuestionIndex]?.answer;\n      setPopupMessage(`La respuesta correcta es: ${correctAnswer}`);\n      setShowPopup(true);\n      return;\n    }\n\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n    setSelectedOption(\"\");\n    setAnswerMessage(\"\");\n    setShowCorrectAnswer(false);\n    setTimeLeft(60);\n  };\n\n  const handlePopupClose = () => {\n    setShowPopup(false);\n\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(\"\");\n      setAnswerMessage(\"\");\n      setShowCorrectAnswer(false);\n      setTimeLeft(60);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handleResetQuiz = () => {\n    window.location.reload();\n  };\n\n  const handleNumQuestionsChange = (e) => {\n    setNumQuestions(Number(e.target.value));\n  };\n\n  const startQuiz = () => {\n    const shuffledQuestions = shuffleArray(questions);\n    const selected = shuffledQuestions.slice(0, numQuestions);\n    setSelectedQuestions(selected);\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n  };\n\n  const changeLanguage = (lang) => {\n    setLanguage(lang);\n    setQuestions([]);\n    setSelectedLanguage(lang);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"language-buttons\">\n          <button\n            className={selectedLanguage === \"es\" ? \"selected\" : \"\"}\n            onClick={() => changeLanguage(\"es\")}\n          >\n            ES\n          </button>\n          <button\n            className={selectedLanguage === \"en\" ? \"selected\" : \"\"}\n            onClick={() => changeLanguage(\"en\")}\n          >\n            EN\n          </button>\n          <button\n            className={selectedLanguage === \"de\" ? \"selected\" : \"\"}\n            onClick={() => changeLanguage(\"de\")}\n          >\n            DE\n          </button>\n        </div>\n        {!selectedQuestions.length ? (\n          <div>\n            <label>\n              Elegir cantidad de preguntas:\n              <input\n                type=\"number\"\n                min=\"1\"\n                max={questions.length}\n                value={numQuestions}\n                onChange={handleNumQuestionsChange}\n              />\n            </label>\n            <button onClick={startQuiz}>Iniciar Quiz</button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"timer\">Tiempo restante: {timeLeft}s</div>\n            <h2>{selectedQuestions[currentQuestionIndex]?.question}</h2>\n            <div>\n              {selectedQuestions[currentQuestionIndex]?.options.map(\n                (option, index) => (\n                  <div\n                    key={index}\n                    className={`option ${\n                      showCorrectAnswer &&\n                      option === selectedQuestions[currentQuestionIndex]?.answer\n                        ? \"correct\"\n                        : showCorrectAnswer && option === selectedOption\n                        ? \"incorrect\"\n                        : \"\"\n                    }`}\n                  >\n                    <input\n                      type=\"radio\"\n                      name=\"option\"\n                      value={option}\n                      checked={selectedOption === option}\n                      onChange={handleOptionChange}\n                      disabled={showCorrectAnswer}\n                    />\n                    {option}\n                  </div>\n                )\n              )}\n            </div>\n            <div className=\"button-container\">\n              <button onClick={handleNextQuestion}>Siguiente Pregunta</button>\n            </div>\n          </div>\n        )}\n        {showPopup && (\n          <div className=\"popup\">\n            <p>{popupMessage}</p>\n            <button onClick={handlePopupClose}>Cerrar</button>\n          </div>\n        )}\n        {showScore && (\n          <div>\n            <p>\n              Tu puntuaciÃ³n es {score} de {selectedQuestions.length}\n            </p>\n            <p>\n              Porcentaje de aciertos:{\" \"}\n              {((score / selectedQuestions.length) * 100).toFixed(2)}%\n            </p>\n            <div className=\"button-container\">\n              <button onClick={handleResetQuiz}>Reiniciar Quiz</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}