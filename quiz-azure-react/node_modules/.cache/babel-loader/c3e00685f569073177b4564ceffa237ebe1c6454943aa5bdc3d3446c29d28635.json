{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\github\\\\quiz-azure-react\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\n// Archivos JSON con textos estáticos en diferentes idiomas\nimport textosES from \"./textos-es.json\";\nimport textosEN from \"./textos-en.json\";\nimport textosDE from \"./textos-de.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [language, setLanguage] = useState(\"es\"); // Estado para el idioma seleccionado\n\n  const [selectedLanguage, setSelectedLanguage] = useState(\"es\"); // Estado para el botón de idioma seleccionado\n\n  const [quizStarted, setQuizStarted] = useState(false); // Estado para controlar si se ha iniciado el quiz\n\n  useEffect(() => {\n    // Cargar las preguntas solo al inicio\n    const fetchQuestions = async () => {\n      const fetchedQuestions = await loadQuestionsByLanguage(language);\n      if (fetchedQuestions.length > 0) {\n        const shuffledQuestions = shuffleArray(fetchedQuestions);\n        setQuestions(shuffledQuestions);\n      }\n    };\n    fetchQuestions();\n  }, [language]); // Añadir language a la dependencia para actualizar preguntas al cambiar idioma\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const loadQuestionsByLanguage = async lang => {\n    try {\n      const response = await axios.get(`http://localhost:3001/questions-${lang}.json`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      return [];\n    }\n  };\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n    setShowCorrectAnswer(false);\n  };\n  const checkAnswer = () => {\n    var _selectedQuestions$cu;\n    if (selectedOption === ((_selectedQuestions$cu = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu === void 0 ? void 0 : _selectedQuestions$cu.answer)) {\n      setScore(prevScore => prevScore);\n      setAnswerMessage(textos[language].respuestaCorrecta);\n    } else {\n      setAnswerMessage(textos[language].respuestaIncorrecta);\n    }\n    setShowCorrectAnswer(true);\n  };\n  const handleNextQuestion = () => {\n    var _selectedQuestions$cu2;\n    if (selectedOption === ((_selectedQuestions$cu2 = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu2 === void 0 ? void 0 : _selectedQuestions$cu2.answer)) {\n      setScore(prevScore => prevScore + 1); // Contabiliza la respuesta correcta\n    } else {\n      setAnswerMessage(textos[language].respuestaIncorrecta);\n    }\n    setShowCorrectAnswer(false);\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(\"\");\n    } else {\n      setShowScore(true);\n    }\n    setTimeLeft(60);\n  };\n  const handleResetQuiz = () => {\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setQuizStarted(false); // Reiniciar el estado de quizStarted\n    setSelectedQuestions([]);\n    setTimeLeft(60);\n  };\n  const handleNumQuestionsChange = e => {\n    setNumQuestions(Number(e.target.value));\n  };\n  const startQuiz = () => {\n    setSelectedQuestions(shuffleArray(questions).slice(0, numQuestions));\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n    setQuizStarted(true); // Marcar que el quiz ha comenzado\n  };\n  const changeLanguage = lang => {\n    setLanguage(lang);\n    setSelectedLanguage(lang); // Marca el botón de idioma seleccionado\n  };\n\n  // Definición de textos estáticos según el idioma seleccionado\n  const textos = {\n    es: textosES,\n    en: textosEN,\n    de: textosDE\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedLanguage === \"es\" ? \"selected\" : \"\",\n        onClick: () => changeLanguage(\"es\"),\n        children: \"ES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedLanguage === \"en\" ? \"selected\" : \"\",\n        onClick: () => changeLanguage(\"en\"),\n        children: \"EN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedLanguage === \"de\" ? \"selected\" : \"\",\n        onClick: () => changeLanguage(\"de\"),\n        children: \"DE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [!quizStarted && !showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start-quiz\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [textos[language].elegirCantidadPreguntas, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            max: questions.length,\n            value: numQuestions,\n            onChange: handleNumQuestionsChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-quiz-button\",\n          onClick: startQuiz,\n          children: textos[language].iniciarQuiz\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), quizStarted && !showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [textos[language].tiempoRestante, \": \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedQuestions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: selectedQuestions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `option ${showCorrectAnswer && option === selectedQuestions[currentQuestionIndex].answer ? \"correct\" : showCorrectAnswer && option === selectedOption ? \"incorrect\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"option\",\n              value: option,\n              checked: selectedOption === option,\n              onChange: handleOptionChange,\n              disabled: showCorrectAnswer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, this), option]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: checkAnswer,\n            disabled: showCorrectAnswer,\n            children: textos[language].verificarRespuesta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), showCorrectAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: answerMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextQuestion,\n            children: textos[language].siguientePregunta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [textos[language].puntuacion, \": \", score, \" / \", numQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [textos[language].porcentajeAciertos, \":\", (score / selectedQuestions.length * 100).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetQuiz,\n            children: textos[language].reiniciarQuiz\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"lb2O0XfGQm/eohDj8duMaxjIaUQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","textosES","textosEN","textosDE","jsxDEV","_jsxDEV","shuffleArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","App","_s","questions","setQuestions","selectedQuestions","setSelectedQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","answerMessage","setAnswerMessage","numQuestions","setNumQuestions","showCorrectAnswer","setShowCorrectAnswer","language","setLanguage","selectedLanguage","setSelectedLanguage","quizStarted","setQuizStarted","fetchQuestions","fetchedQuestions","loadQuestionsByLanguage","shuffledQuestions","handleNextQuestion","timer","setInterval","prevTime","clearInterval","lang","response","get","data","error","console","handleOptionChange","e","target","value","checkAnswer","_selectedQuestions$cu","answer","prevScore","textos","respuestaCorrecta","respuestaIncorrecta","_selectedQuestions$cu2","handleResetQuiz","handleNumQuestionsChange","Number","startQuiz","slice","changeLanguage","es","en","de","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","elegirCantidadPreguntas","type","min","max","onChange","iniciarQuiz","tiempoRestante","question","options","map","option","index","name","checked","disabled","verificarRespuesta","siguientePregunta","puntuacion","porcentajeAciertos","toFixed","reiniciarQuiz","_c","$RefreshReg$"],"sources":["C:/Users/gabri/github/quiz-azure-react/quiz-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\n// Archivos JSON con textos estáticos en diferentes idiomas\nimport textosES from \"./textos-es.json\";\nimport textosEN from \"./textos-en.json\";\nimport textosDE from \"./textos-de.json\";\n\nconst shuffleArray = (array) => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [language, setLanguage] = useState(\"es\"); // Estado para el idioma seleccionado\n\n  const [selectedLanguage, setSelectedLanguage] = useState(\"es\"); // Estado para el botón de idioma seleccionado\n\n  const [quizStarted, setQuizStarted] = useState(false); // Estado para controlar si se ha iniciado el quiz\n\n  useEffect(() => {\n    // Cargar las preguntas solo al inicio\n    const fetchQuestions = async () => {\n      const fetchedQuestions = await loadQuestionsByLanguage(language);\n      if (fetchedQuestions.length > 0) {\n        const shuffledQuestions = shuffleArray(fetchedQuestions);\n        setQuestions(shuffledQuestions);\n      }\n    };\n    fetchQuestions();\n  }, [language]); // Añadir language a la dependencia para actualizar preguntas al cambiar idioma\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft((prevTime) => prevTime - 1);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  const loadQuestionsByLanguage = async (lang) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:3001/questions-${lang}.json`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      return [];\n    }\n  };\n\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n    setShowCorrectAnswer(false);\n  };\n\n  const checkAnswer = () => {\n    if (selectedOption === selectedQuestions[currentQuestionIndex]?.answer) {\n      setScore((prevScore) => prevScore);\n      setAnswerMessage(textos[language].respuestaCorrecta);\n    } else {\n      setAnswerMessage(textos[language].respuestaIncorrecta);\n    }\n    setShowCorrectAnswer(true);\n  };\n\n  const handleNextQuestion = () => {\n    if (selectedOption === selectedQuestions[currentQuestionIndex]?.answer) {\n      setScore((prevScore) => prevScore + 1); // Contabiliza la respuesta correcta\n    } else {\n      setAnswerMessage(textos[language].respuestaIncorrecta);\n    }\n\n    setShowCorrectAnswer(false);\n\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedOption(\"\");\n    } else {\n      setShowScore(true);\n    }\n\n    setTimeLeft(60);\n  };\n\n  const handleResetQuiz = () => {\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setQuizStarted(false); // Reiniciar el estado de quizStarted\n    setSelectedQuestions([]);\n    setTimeLeft(60);\n  };\n\n  const handleNumQuestionsChange = (e) => {\n    setNumQuestions(Number(e.target.value));\n  };\n\n  const startQuiz = () => {\n    setSelectedQuestions(shuffleArray(questions).slice(0, numQuestions));\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n    setQuizStarted(true); // Marcar que el quiz ha comenzado\n  };\n\n  const changeLanguage = (lang) => {\n    setLanguage(lang);\n    setSelectedLanguage(lang); // Marca el botón de idioma seleccionado\n  };\n\n  // Definición de textos estáticos según el idioma seleccionado\n  const textos = {\n    es: textosES,\n    en: textosEN,\n    de: textosDE,\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"language-buttons\">\n        <button\n          className={selectedLanguage === \"es\" ? \"selected\" : \"\"}\n          onClick={() => changeLanguage(\"es\")}\n        >\n          ES\n        </button>\n        <button\n          className={selectedLanguage === \"en\" ? \"selected\" : \"\"}\n          onClick={() => changeLanguage(\"en\")}\n        >\n          EN\n        </button>\n        <button\n          className={selectedLanguage === \"de\" ? \"selected\" : \"\"}\n          onClick={() => changeLanguage(\"de\")}\n        >\n          DE\n        </button>\n      </div>\n      <div className=\"container\">\n        {!quizStarted && !showScore && (\n          <div className=\"start-quiz\">\n            <label>\n              {textos[language].elegirCantidadPreguntas}\n              <input\n                type=\"number\"\n                min=\"1\"\n                max={questions.length}\n                value={numQuestions}\n                onChange={handleNumQuestionsChange}\n              />\n            </label>\n            <button className=\"start-quiz-button\" onClick={startQuiz}>\n              {textos[language].iniciarQuiz}\n            </button>\n          </div>\n        )}\n        {quizStarted && !showScore && (\n          <div>\n            <div className=\"timer\">\n              {textos[language].tiempoRestante}: {timeLeft}s\n            </div>\n            <h2>{selectedQuestions[currentQuestionIndex].question}</h2>\n            <div>\n              {selectedQuestions[currentQuestionIndex].options.map(\n                (option, index) => (\n                  <div\n                    key={index}\n                    className={`option ${\n                      showCorrectAnswer &&\n                      option === selectedQuestions[currentQuestionIndex].answer\n                        ? \"correct\"\n                        : showCorrectAnswer && option === selectedOption\n                        ? \"incorrect\"\n                        : \"\"\n                    }`}\n                  >\n                    <input\n                      type=\"radio\"\n                      name=\"option\"\n                      value={option}\n                      checked={selectedOption === option}\n                      onChange={handleOptionChange}\n                      disabled={showCorrectAnswer}\n                    />\n                    {option}\n                  </div>\n                )\n              )}\n            </div>\n            <div className=\"button-container\">\n              <button onClick={checkAnswer} disabled={showCorrectAnswer}>\n                {textos[language].verificarRespuesta}\n              </button>\n              {showCorrectAnswer && <p>{answerMessage}</p>}\n              <button onClick={handleNextQuestion}>\n                {textos[language].siguientePregunta}\n              </button>\n            </div>\n          </div>\n        )}\n        {showScore && (\n          <div>\n            <p>\n              {textos[language].puntuacion}: {score} / {numQuestions}\n            </p>\n            <p>\n              {textos[language].porcentajeAciertos}:\n              {((score / selectedQuestions.length) * 100).toFixed(2)}%\n            </p>\n            <div className=\"button-container\">\n              <button onClick={handleResetQuiz}>\n                {textos[language].reiniciarQuiz}\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}