{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\github\\\\quiz-azure-react\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n\n  // Mientras queden elementos a mezclar...\n  while (currentIndex !== 0) {\n    // Seleccionar un elemento sin mezclar de forma aleatoria\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // Intercambiarlo con el elemento actual\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/questions\");\n        const shuffledQuestions = shuffleArray(response.data); // Mezcla aleatoria de las preguntas obtenidas\n        setQuestions(shuffledQuestions);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  const handleCheckAnswer = () => {\n    var _questions$currentQue;\n    if (selectedOption === ((_questions$currentQue = questions[currentQuestionIndex]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.answer)) {\n      setScore(score + 1);\n      setAnswerMessage(\"¡Respuesta correcta!\");\n    } else {\n      setAnswerMessage(\"Respuesta incorrecta.\");\n    }\n  };\n  const handleNextQuestion = () => {\n    setAnswerMessage(\"\"); // Limpiar mensaje de respuesta\n\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScore(true);\n    }\n    setSelectedOption(\"\"); // Limpiar opción seleccionada\n    setTimeLeft(60); // Reiniciar tiempo restante\n  };\n  const handleResetQuiz = () => {\n    const shuffledQuestions = shuffleArray(questions); // Mezcla las preguntas nuevamente al reiniciar\n    setQuestions(shuffledQuestions);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowScore(false);\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n    setAnswerMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tu puntaje es \", score, \" de \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetQuiz,\n            children: \"Reiniciar Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : questions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer\",\n          children: [\"Tiempo restante: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: questions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"option\",\n              value: option,\n              checked: selectedOption === option,\n              onChange: handleOptionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 23\n            }, this), option]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCheckAnswer,\n            children: \"Verificar Respuesta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), answerMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: answerMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextQuestion,\n            children: \"Siguiente Pregunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetQuiz,\n            children: \"Reiniciar Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0bPV4M0HmHG2HDRAhfY2oV6ikmQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","shuffleArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","App","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","answerMessage","setAnswerMessage","fetchQuestions","response","get","shuffledQuestions","data","error","console","handleNextQuestion","timer","setInterval","prevTime","clearInterval","handleOptionChange","e","target","value","handleCheckAnswer","_questions$currentQue","answer","handleResetQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","options","map","option","index","type","name","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/gabri/github/quiz-azure-react/quiz-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\nconst shuffleArray = (array) => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n\n  // Mientras queden elementos a mezclar...\n  while (currentIndex !== 0) {\n    // Seleccionar un elemento sin mezclar de forma aleatoria\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // Intercambiarlo con el elemento actual\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/questions\");\n        const shuffledQuestions = shuffleArray(response.data); // Mezcla aleatoria de las preguntas obtenidas\n        setQuestions(shuffledQuestions);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft((prevTime) => prevTime - 1);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n  };\n\n  const handleCheckAnswer = () => {\n    if (selectedOption === questions[currentQuestionIndex]?.answer) {\n      setScore(score + 1);\n      setAnswerMessage(\"¡Respuesta correcta!\");\n    } else {\n      setAnswerMessage(\"Respuesta incorrecta.\");\n    }\n  };\n\n  const handleNextQuestion = () => {\n    setAnswerMessage(\"\"); // Limpiar mensaje de respuesta\n\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScore(true);\n    }\n\n    setSelectedOption(\"\"); // Limpiar opción seleccionada\n    setTimeLeft(60); // Reiniciar tiempo restante\n  };\n\n  const handleResetQuiz = () => {\n    const shuffledQuestions = shuffleArray(questions); // Mezcla las preguntas nuevamente al reiniciar\n    setQuestions(shuffledQuestions);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setShowScore(false);\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n    setAnswerMessage(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        {showScore ? (\n          <div>\n            <p>\n              Tu puntaje es {score} de {questions.length}\n            </p>\n            <div className=\"button-container\">\n              <button onClick={handleResetQuiz}>Reiniciar Quiz</button>\n            </div>\n          </div>\n        ) : (\n          questions.length > 0 && (\n            <div>\n              <div className=\"timer\">Tiempo restante: {timeLeft}s</div>\n              <h2>{questions[currentQuestionIndex].question}</h2>\n              <div>\n                {questions[currentQuestionIndex].options.map(\n                  (option, index) => (\n                    <div key={index}>\n                      <input\n                        type=\"radio\"\n                        name=\"option\"\n                        value={option}\n                        checked={selectedOption === option}\n                        onChange={handleOptionChange}\n                      />\n                      {option}\n                    </div>\n                  )\n                )}\n              </div>\n              <div className=\"button-container\">\n                <button onClick={handleCheckAnswer}>Verificar Respuesta</button>\n                {answerMessage && <p>{answerMessage}</p>}\n                <button onClick={handleNextQuestion}>Siguiente Pregunta</button>\n                <button onClick={handleResetQuiz}>Reiniciar Quiz</button>\n              </div>\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}