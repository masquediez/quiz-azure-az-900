{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\github\\\\quiz-azure-react\\\\quiz-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [language, setLanguage] = useState(\"es\"); // Estado para el idioma seleccionado\n\n  const [selectedLanguage, setSelectedLanguage] = useState(\"es\"); // Estado para el botón de idioma seleccionado\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const fetchedQuestions = await loadQuestionsByLanguage(language);\n      if (fetchedQuestions.length > 0) {\n        const shuffledQuestions = shuffleArray(fetchedQuestions);\n        setQuestions(shuffledQuestions);\n      }\n    };\n    fetchQuestions();\n  }, [language]);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const loadQuestionsByLanguage = async lang => {\n    try {\n      const response = await axios.get(`http://localhost:3001/questions-${lang}.json`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      return [];\n    }\n  };\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n    setShowCorrectAnswer(false);\n  };\n  const checkAnswer = () => {\n    var _selectedQuestions$cu;\n    if (selectedOption === ((_selectedQuestions$cu = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu === void 0 ? void 0 : _selectedQuestions$cu.answer)) {\n      setScore(prevScore => prevScore + 1);\n      setAnswerMessage(\"¡Respuesta Correcta!\");\n    } else {\n      setAnswerMessage(\"Respuesta Incorrecta\");\n    }\n    setShowCorrectAnswer(true);\n  };\n  const handleNextQuestion = () => {\n    var _selectedQuestions$cu2;\n    if (selectedOption === ((_selectedQuestions$cu2 = selectedQuestions[currentQuestionIndex]) === null || _selectedQuestions$cu2 === void 0 ? void 0 : _selectedQuestions$cu2.answer)) {\n      setScore(prevScore => prevScore + 1); // Contabiliza la respuesta correcta\n    }\n    setAnswerMessage(\"\");\n    setShowCorrectAnswer(false);\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScore(true);\n    }\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n  };\n  const handleResetQuiz = () => {\n    window.location.reload();\n  };\n  const handleNumQuestionsChange = e => {\n    setNumQuestions(Number(e.target.value));\n  };\n  const startQuiz = () => {\n    const shuffledQuestions = shuffleArray(questions);\n    const selected = shuffledQuestions.slice(0, numQuestions);\n    setSelectedQuestions(selected);\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n  };\n  const changeLanguage = lang => {\n    setLanguage(lang);\n    setQuestions([]);\n    setSelectedLanguage(lang); // Marca el botón de idioma seleccionado\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedLanguage === \"es\" ? \"selected\" : \"\",\n          onClick: () => changeLanguage(\"es\"),\n          children: \"ES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedLanguage === \"en\" ? \"selected\" : \"\",\n          onClick: () => changeLanguage(\"en\"),\n          children: \"EN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedLanguage === \"de\" ? \"selected\" : \"\",\n          onClick: () => changeLanguage(\"de\"),\n          children: \"DE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tu puntuaci\\xF3n es \", score, \" de \", selectedQuestions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Porcentaje de acierto:\", (score / selectedQuestions.length * 100).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetQuiz,\n            children: \"Reiniciar Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: selectedQuestions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Elegir cantidad de preguntas:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: questions.length,\n              value: numQuestions,\n              onChange: handleNumQuestionsChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startQuiz,\n            children: \"Iniciar Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer\",\n            children: [\"Tiempo restante: \", timeLeft, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedQuestions[currentQuestionIndex].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedQuestions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `option ${showCorrectAnswer && option === selectedQuestions[currentQuestionIndex].answer ? \"correct\" : showCorrectAnswer && option === selectedOption ? \"incorrect\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"option\",\n                value: option,\n                checked: selectedOption === option,\n                onChange: handleOptionChange,\n                disabled: showCorrectAnswer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 25\n              }, this), option]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: checkAnswer,\n              disabled: showCorrectAnswer,\n              children: \"Verificar Respuesta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), answerMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: answerMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextQuestion,\n              children: \"Siguiente Pregunta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dg/b/66LyCBz97Bl+BwbC5toA8w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","shuffleArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","App","_s","questions","setQuestions","selectedQuestions","setSelectedQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","answerMessage","setAnswerMessage","numQuestions","setNumQuestions","showCorrectAnswer","setShowCorrectAnswer","language","setLanguage","selectedLanguage","setSelectedLanguage","fetchQuestions","fetchedQuestions","loadQuestionsByLanguage","shuffledQuestions","handleNextQuestion","timer","setInterval","prevTime","clearInterval","lang","response","get","data","error","console","handleOptionChange","e","target","value","checkAnswer","_selectedQuestions$cu","answer","prevScore","_selectedQuestions$cu2","handleResetQuiz","window","location","reload","handleNumQuestionsChange","Number","startQuiz","selected","slice","changeLanguage","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","type","min","max","onChange","question","options","map","option","index","name","checked","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gabri/github/quiz-azure-react/quiz-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\nconst shuffleArray = (array) => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n  const [language, setLanguage] = useState(\"es\"); // Estado para el idioma seleccionado\n\n  const [selectedLanguage, setSelectedLanguage] = useState(\"es\"); // Estado para el botón de idioma seleccionado\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const fetchedQuestions = await loadQuestionsByLanguage(language);\n      if (fetchedQuestions.length > 0) {\n        const shuffledQuestions = shuffleArray(fetchedQuestions);\n        setQuestions(shuffledQuestions);\n      }\n    };\n    fetchQuestions();\n  }, [language]);\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNextQuestion();\n    }\n    const timer = setInterval(() => {\n      setTimeLeft((prevTime) => prevTime - 1);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  const loadQuestionsByLanguage = async (lang) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:3001/questions-${lang}.json`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n      return [];\n    }\n  };\n\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n    setShowCorrectAnswer(false);\n  };\n\n  const checkAnswer = () => {\n    if (selectedOption === selectedQuestions[currentQuestionIndex]?.answer) {\n      setScore((prevScore) => prevScore + 1);\n      setAnswerMessage(\"¡Respuesta Correcta!\");\n    } else {\n      setAnswerMessage(\"Respuesta Incorrecta\");\n    }\n    setShowCorrectAnswer(true);\n  };\n\n  const handleNextQuestion = () => {\n    if (selectedOption === selectedQuestions[currentQuestionIndex]?.answer) {\n      setScore((prevScore) => prevScore + 1); // Contabiliza la respuesta correcta\n    }\n\n    setAnswerMessage(\"\");\n    setShowCorrectAnswer(false);\n\n    if (currentQuestionIndex < selectedQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScore(true);\n    }\n\n    setSelectedOption(\"\");\n    setTimeLeft(60);\n  };\n\n  const handleResetQuiz = () => {\n    window.location.reload();\n  };\n\n  const handleNumQuestionsChange = (e) => {\n    setNumQuestions(Number(e.target.value));\n  };\n\n  const startQuiz = () => {\n    const shuffledQuestions = shuffleArray(questions);\n    const selected = shuffledQuestions.slice(0, numQuestions);\n    setSelectedQuestions(selected);\n    setShowScore(false);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(60);\n  };\n\n  const changeLanguage = (lang) => {\n    setLanguage(lang);\n    setQuestions([]);\n    setSelectedLanguage(lang); // Marca el botón de idioma seleccionado\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"language-buttons\">\n          <button\n            className={selectedLanguage === \"es\" ? \"selected\" : \"\"}\n            onClick={() => changeLanguage(\"es\")}\n          >\n            ES\n          </button>\n          <button\n            className={selectedLanguage === \"en\" ? \"selected\" : \"\"}\n            onClick={() => changeLanguage(\"en\")}\n          >\n            EN\n          </button>\n          <button\n            className={selectedLanguage === \"de\" ? \"selected\" : \"\"}\n            onClick={() => changeLanguage(\"de\")}\n          >\n            DE\n          </button>\n        </div>\n        {showScore ? (\n          <div>\n            <p>\n              Tu puntuación es {score} de {selectedQuestions.length}\n            </p>\n            <p>\n              Porcentaje de acierto:\n              {((score / selectedQuestions.length) * 100).toFixed(2)}%\n            </p>\n            <div className=\"button-container\">\n              <button onClick={handleResetQuiz}>Reiniciar Quiz</button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            {selectedQuestions.length === 0 ? (\n              <div>\n                <label>\n                  Elegir cantidad de preguntas:\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    max={questions.length}\n                    value={numQuestions}\n                    onChange={handleNumQuestionsChange}\n                  />\n                </label>\n                <button onClick={startQuiz}>Iniciar Quiz</button>\n              </div>\n            ) : (\n              <div>\n                <div className=\"timer\">Tiempo restante: {timeLeft}s</div>\n                <h2>{selectedQuestions[currentQuestionIndex].question}</h2>\n                <div>\n                  {selectedQuestions[currentQuestionIndex].options.map(\n                    (option, index) => (\n                      <div\n                        key={index}\n                        className={`option ${\n                          showCorrectAnswer &&\n                          option ===\n                            selectedQuestions[currentQuestionIndex].answer\n                            ? \"correct\"\n                            : showCorrectAnswer && option === selectedOption\n                            ? \"incorrect\"\n                            : \"\"\n                        }`}\n                      >\n                        <input\n                          type=\"radio\"\n                          name=\"option\"\n                          value={option}\n                          checked={selectedOption === option}\n                          onChange={handleOptionChange}\n                          disabled={showCorrectAnswer}\n                        />\n                        {option}\n                      </div>\n                    )\n                  )}\n                </div>\n                <div className=\"button-container\">\n                  <button onClick={checkAnswer} disabled={showCorrectAnswer}>\n                    Verificar Respuesta\n                  </button>\n                  {answerMessage && <p>{answerMessage}</p>}\n                  <button onClick={handleNextQuestion}>\n                    Siguiente Pregunta\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}